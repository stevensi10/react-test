{"version":3,"sources":["Home.js","Search.js","GenreFilter.js","LanguageFilter.js","OrderFilter.js","YearFilter.js","List.js","SeasonList.js","Info.js","EpisodeList.js","Cast.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","state","ListGroup","ListGroupItem","React","Component","Search","search","timer","timerInterval","bind","onInputChange","startTimer","searchValue","this","onChange","clearTimeout","setState","setTimeout","e","target","value","Form","Control","type","placeholder","GenreFilter","genre","getData","error","isLoaded","items","typeEndpoint","fetch","then","res","json","result","genres","options","map","item","index","id","key","selected","name","Group","Label","as","LanguageFilter","language","sort","a","b","textA","english_name","toUpperCase","textB","iso_639_1","OrderFilter","movies","series","order","YearFilter","years","maxValue","Date","getFullYear","minValue","step","List","history","location","pathname","replace","currentYear","currentPage","perPage","countResults","min","max","castClick","infoClick","pageChange","genreClick","cast_id","push","event","Number","afterChange","lowerYear","greaterYear","endpoint","url","results","total_results","pageNumbers","Math","ceil","renderPageNumbers","array","className","href","onClick","aria-hidden","data","message","Row","Col","md","MediaCard","imagePath","imdbID","imdbVotes","imdbRating","videoLink","isOpen","cast","directors","writers","openModal","videos","j","length","credits","k","crew","job","poster_path","external_ids","imdb_id","imdbLink","undefined","style","cursor","directorList","writerList","castList","video","class","channel","videoId","onClose","width","height","src","tooltip","sm","lg","Card","Img","variant","icon","faHeart","color","Body","Title","title","release_date","seriesClick","first_air_date","Subtitle","number_of_seasons","status","Text","Container","Tabs","defaultActiveKey","Tab","eventKey","data-user","data-title","data-style","overview","Accordion","Toggle","Button","faList","Collapse","SeasonList","tv_id","seasonClick","season_number","seasons","original_name","Season","numberEpisodes","episodes","air_date","responsive","superLargeDesktop","breakpoint","desktop","tablet","mobile","currencyFormat","num","toFixed","Info","values","queryString","parse","info","castColumns","dataField","text","formatter","castFormatter","hidden","cell","row","console","log","imageLink","profile_path","Breadcrumb","Item","active","thumbnail","faClock","episode_run_time","runtime","faDollarSign","budget","revenue","original_title","EpisodeList","season","episode_number","Episode","still_path","Cast","columns","titleFormatter","rottenFormatter","urlInfo","async","forEach","element","jobs","splice","element2","index2","element3","index3","character","concat","media_type","resultDetails","rottenRating","Image","keyField","defaultSorted","striped","noDataIndication","App","to","faHome","faFilm","faTv","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6RA2BeA,E,YAxBX,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,GAFI,E,mHAWjB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,2CACA,kBAACA,EAAA,EAAD,+DACA,kBAACA,EAAA,EAAD,uCACA,kBAACA,EAAA,EAAD,qEACA,kBAACA,EAAA,EAAD,kCACA,kBAACA,EAAA,EAAD,oF,GAnBSC,IAAMC,W,iIC8CVC,E,YA7CX,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXM,OAAQ,KACRC,MAAO,KACPC,cAAe,KAEjB,EAAKF,OAAS,EAAKA,OAAOG,KAAZ,gBACd,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBATD,E,sEAcjB,IAAIG,EAAcC,KAAKb,MAAMM,OACN,GAApBO,KAAKb,MAAMO,OACZM,KAAKd,MAAMe,SAASF,K,mCAMtBG,aAAaF,KAAKb,MAAMO,OACxBM,KAAKG,SAAS,CACZT,MAAOU,WAAWJ,KAAKP,OAAQO,KAAKb,MAAMQ,mB,oCAIhCU,GAEZL,KAAKG,SAAS,CAACV,OAAQY,EAAEC,OAAOC,QAChCP,KAAKF,e,+BAIL,OACE,kBAACU,EAAA,EAAKC,QAAN,CACAC,KAAK,OACLC,YAAY,YACZV,SAAUD,KAAKH,oB,GAxCFP,IAAMC,WCgFZqB,E,YA/EX,WAAY1B,GAAQ,IAAD,8BACjB,4CAAMA,KACD2B,MAAQ,EAAKA,MAAMjB,KAAX,gBACb,EAAKkB,QAAU,EAAKA,QAAQlB,KAAb,gBACf,EAAKT,MAAQ,CACX4B,MAAO,KACPC,UAAU,EACVC,MAAO,IAPQ,E,iFAYfjB,KAAKc,Y,gCAIR,IAAD,OAEI,GAAW,UADAd,KAAKd,MAAMwB,KAEpB,IAAIQ,EAAe,UAEfA,EAAe,QAGrBC,MADU,iCADK,SAAWD,EAAe,SACc,4DAEpDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKpB,SAAS,CACZa,UAAU,EACVC,MAAOM,EAAOC,YAGlB,SAACT,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,4BAMNV,GAEJ,IAAIE,EAAQF,EAAEC,OAAOC,MACrBP,KAAKd,MAAMe,SAASM,K,+BAGZ,IAAD,OAECkB,EADUzB,KAAKb,MAAd8B,MACeS,KAAI,SAACC,EAAMC,GAAP,OACtB,EAAK1C,MAAMqB,OAASoB,EAAKE,GACzB,4BACEC,IAAKH,EAAKE,GACVtB,MAAOoB,EAAKE,GACZE,UAAQ,GAETJ,EAAKK,MAGN,4BACEF,IAAKH,EAAKE,GACVtB,MAAOoB,EAAKE,IAEbF,EAAKK,SAGZ,OACE,kBAACxB,EAAA,EAAKyB,MAAN,KACE,kBAACzB,EAAA,EAAK0B,MAAN,cACA,kBAAC1B,EAAA,EAAKC,QAAN,CAAc0B,GAAG,SAASlC,SAAUD,KAAKa,OACvC,4BAAQN,MAAM,MAAMwB,UAAQ,GAA5B,OACCN,Q,GAzEanC,IAAMC,WCuEjB6C,E,YAtEX,WAAYlD,GAAQ,IAAD,8BACjB,4CAAMA,KACDmD,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAKkB,QAAU,EAAKA,QAAQlB,KAAb,gBACf,EAAKT,MAAQ,CACX4B,MAAO,KACPC,UAAU,EACVC,MAAO,IAPQ,E,iFAYfjB,KAAKc,Y,gCAIR,IAAD,OAEIK,MADU,gHAEPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GAECA,EAAOe,MAAK,SAASC,EAAGC,GACtB,IAAIC,EAAQF,EAAEG,aAAaC,cACvBC,EAAQJ,EAAEE,aAAaC,cAC3B,OAAQF,EAAQG,GAAU,EAAKH,EAAQG,EAAS,EAAI,KAEtD,EAAKzC,SAAS,CACZa,UAAU,EACVC,MAAOM,OAGX,SAACR,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,+BAMHV,GAEP,IAAIE,EAAQF,EAAEC,OAAOC,MACrBP,KAAKd,MAAMe,SAASM,K,+BAGZ,IAEAkB,EADUzB,KAAKb,MAAd8B,MACeS,KAAI,SAACC,EAAMC,GAAP,OACtB,4BACIE,IAAKH,EAAKkB,UACVtC,MAAOoB,EAAKkB,WAEflB,EAAKe,iBAGZ,OACE,kBAAClC,EAAA,EAAKyB,MAAN,KACE,kBAACzB,EAAA,EAAK0B,MAAN,0BACA,kBAAC1B,EAAA,EAAKC,QAAN,CAAc0B,GAAG,SAASlC,SAAUD,KAAKqC,UACvC,4BAAQ9B,MAAM,MAAMwB,UAAQ,GAA5B,OACCN,Q,GAhEgBnC,IAAMC,WCuDpBuD,E,YAtDX,WAAY5D,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX8B,MAAO,CACH8B,OAAS,CAAC,qBAAsB,sBAAuB,iBAAkB,kBAAmB,2BAA4B,4BAA6B,mBAAoB,oBAAqB,cAAe,eAAgB,mBAAoB,oBAAqB,iBAAkB,mBACxRC,OAAQ,CAAC,sBAAuB,qBAAsB,kBAAmB,iBAAkB,oBAAqB,sBAGtH,EAAKC,MAAQ,EAAKA,MAAMrD,KAAX,gBARI,E,mEAWbS,GAEJ,IAAIE,EAAQF,EAAEC,OAAOC,MACrBP,KAAKd,MAAMe,SAASM,K,+BAGZ,IAGFkB,EAFGR,EAASjB,KAAKb,MAAd8B,MACHP,EAAOV,KAAKd,MAAMwB,KAwBxB,MAtBa,UAARA,EAECe,EAAUR,EAAM8B,OAAOrB,KAAI,SAACC,EAAMC,GAAP,OACvB,4BACIE,IAAKH,EACLpB,MAAOoB,GAEVA,MAIO,UAARjB,IAEJe,EAAUR,EAAM+B,OAAOtB,KAAI,SAACC,EAAMC,GAAP,OACvB,4BACIE,IAAKH,EACLpB,MAAOoB,GAEVA,OAKT,kBAACnB,EAAA,EAAKyB,MAAN,KACI,kBAACzB,EAAA,EAAK0B,MAAN,cACA,kBAAC1B,EAAA,EAAKC,QAAN,CAAc0B,GAAG,SAASlC,SAAUD,KAAKiD,MAAO1C,MAAOP,KAAKd,MAAM+D,OACjExB,Q,GAhDanC,IAAMC,W,iBC4BjB2D,G,mBA1BX,WAAYhE,GAAQ,IAAD,8BACjB,4CAAMA,KACDiE,MAAQ,EAAKA,MAAMvD,KAAX,gBAFI,E,mEAKbS,GAEJ,IAAIE,EAAQF,EACZL,KAAKd,MAAMe,SAASM,K,+BAIlB,IACI6C,GADc,IAAIC,MAAOC,cACA,EAC7B,OACE,kBAAC,IAAD,CACAC,SAAU,KACVH,SAAUA,EACV7C,MAAOP,KAAKd,MAAMiE,MAClBlD,SAAUD,KAAKmD,MACfK,KAAM,Q,GArBSlE,IAAMC,Y,QCUzBkE,E,YACF,WAAYvE,GAAQ,IAAD,sBAEf,IAAIwB,GADJ,4CAAMxB,KACUA,MAAMwE,QAAQC,SAASC,SACvClD,EAAOA,EAAKmD,QAAQ,IAAK,IACzB,IAAIC,GAAc,IAAIT,MAAOC,cAJd,OAKf,EAAKnE,MAAQ,CACT4B,MAAO,KACPC,UAAU,EACVC,MAAO,GACP8C,YAAa,EACbC,QAAS,GACTC,aAAc,EACdxE,OAAQ,GACRiB,KAAMA,EACNG,MAAO,MACPwB,SAAU,MACVY,MAAO,kBACPE,MAAO,CAAEe,IAAK,KAAMC,IAAKL,IAE7B,EAAKM,UAAY,EAAKA,UAAUxE,KAAf,gBACjB,EAAKyE,UAAY,EAAKA,UAAUzE,KAAf,gBACjB,EAAK0E,WAAa,EAAKA,WAAW1E,KAAhB,gBAClB,EAAKkB,QAAU,EAAKA,QAAQlB,KAAb,gBACf,EAAKH,OAAS,EAAKA,OAAOG,KAAZ,gBACd,EAAKiB,MAAQ,EAAKA,MAAMjB,KAAX,gBACb,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAChB,EAAKqD,MAAQ,EAAKA,MAAMrD,KAAX,gBACb,EAAKuD,MAAQ,EAAKA,MAAMvD,KAAX,gBACb,EAAK2E,WAAa,EAAKA,WAAW3E,KAAhB,gBA5BH,E,uEA+BT4E,GACRxE,KAAKd,MAAMwE,QAAQe,KAAK,CACpBb,SAAU,QACVnE,OAAQ,YAAY+E,M,gCAIhB9D,EAAKmB,GACb7B,KAAKd,MAAMwE,QAAQe,KAAK,CACpBb,SAAU,QACVnE,OAAQ,SAAWiB,EAAO,OAASmB,M,iCAI9BhB,GACTb,KAAKG,SAAS,CAACU,MAAMA,IACrBb,KAAKa,MAAMA,K,0CAIXb,KAAKc,Y,iCAGI4D,GAAQ,IAAD,OAChB1E,KAAKG,SAAS,CAAC4D,YAAaY,OAAOD,EAAMpE,OAAOuB,MAC9C,WAAO,EAAK+C,mB,6BAITrE,GAAQ,IAAD,OACZP,KAAKG,SAAS,CAACV,OAAQc,IACrB,WAAO,EAAKqE,mB,4BAIVrE,GAAQ,IAAD,OACXP,KAAKG,SAAS,CAACU,MAAON,IACpB,WAAO,EAAKqE,mB,+BAIPrE,GAAQ,IAAD,OACdP,KAAKG,SAAS,CAACkC,SAAU9B,IACvB,WAAO,EAAKqE,mB,4BAIVrE,GAAQ,IAAD,OACXP,KAAKG,SAAS,CAAC8C,MAAO1C,IACpB,WAAO,EAAKqE,mB,4BAIVrE,GAAQ,IAAD,OACXP,KAAKG,SAAS,CAACgD,MAAO5C,IACpB,WAAO,EAAKqE,mB,oCAKd5E,KAAKc,Y,gCAIN,IAAD,OACId,KAAKG,SAAS,CAACc,MAAO,KACtB,IAAIxB,EAASO,KAAKb,MAAMM,OACpBoB,EAAQb,KAAKb,MAAM0B,MACnBwB,EAAWrC,KAAKb,MAAMkD,SACtB3B,EAAOV,KAAKb,MAAMuB,KAClBuC,EAAQjD,KAAKb,MAAM8D,MACnBE,EAAQnD,KAAKb,MAAMgE,MAEnB0B,EAAY1B,EAAMe,IAAM,SACxBY,EAAc3B,EAAMgB,IAAM,SAE9B,GAAW,UAARzD,EACD,IAAIQ,EAAe,UAEfA,EAAe,QAErB,GAAa,IAAVzB,GAA0B,MAAVA,EACf,IAAIsF,EAAW,UAAY7D,OAGzB6D,EAAW,YAAc7D,EAG/B,IAAI8D,EAAM,gCAAkCD,EAAW,2DAC3C,OAATlE,IACDmE,GAAO,gBAAkBnE,GAEZ,OAAZwB,IACD2C,GAAO,2BAA6B3C,GAEzB,IAAV5C,GAA0B,MAAVA,IACjBuF,GAAO,UAAYvF,GAErBuF,GAAO,YAAc/B,EAEV,UAARvC,GAEDsE,GAAO,6BAA+BH,EACtCG,GAAO,6BAA+BF,GAExB,UAARpE,IAENsE,GAAO,uBAAyBH,EAChCG,GAAO,uBAAyBF,GAElCE,GAAO,SAAWhF,KAAKb,MAAM4E,YAE7B5C,MAAM6D,GACH5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKpB,SAAS,CACZa,UAAU,EACVC,MAAOM,EAAO0D,QACdhB,aAAc1C,EAAO2D,mBAGzB,SAACnE,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,+BAMF,IAAD,SACiDf,KAAKb,MAAnD4B,EADH,EACGA,MAAOC,EADV,EACUA,SAAUC,EADpB,EACoBA,MAAOgD,EAD3B,EAC2BA,aAAcvD,EADzC,EACyCA,KAExCyE,EAAc,GACdpB,EAAc/D,KAAKb,MAAM4E,YAE5BE,EAAe,IAEE,GAAfF,GACDoB,EAAYV,KAAK,CAAC,EAAE,UACnBV,EAAc,GACfoB,EAAYV,KAAK,CAACV,EAAY,EAAEA,EAAY,IAC3CA,EAAc,GACfoB,EAAYV,KAAK,CAACV,EAAY,EAAEA,EAAY,IAC9CoB,EAAYV,KAAK,CAACV,EAAYA,IAC3BA,EAAcqB,KAAKC,KAAKpB,EAAejE,KAAKb,MAAM6E,UACnDmB,EAAYV,KAAK,CAACV,EAAY,EAAEA,EAAY,IAC3CA,EAAcqB,KAAKC,KAAKpB,EAAejE,KAAKb,MAAM6E,SAAW,GAC9DmB,EAAYV,KAAK,CAACV,EAAY,EAAEA,EAAY,IAC3CA,GAAeqB,KAAKC,KAAKpB,EAAejE,KAAKb,MAAM6E,UACpDmB,EAAYV,KAAK,CAACW,KAAKC,KAAKpB,EAAejE,KAAKb,MAAM6E,SAAS,UAGnE,IAAMsB,EAAoBH,EAAYzD,KAAI,SAAA6D,GACxC,OAAOA,EAAM,IAEX,IAAK,QACH,OACE,wBAAIC,UAAU,aACZ,uBAAGA,UAAU,YAAYC,KAAM,KAAO/E,EACtCoB,IAAKyD,EAAM,GACX1D,GAAI0D,EAAM,GACVG,QAAS,EAAKpB,YAEd,0BAAMqB,cAAY,QAAlB,UAKN,IAAK,OACH,OACE,wBAAIH,UAAU,aACZ,uBAAGA,UAAU,YAAYC,KAAM,KAAO/E,EACtCoB,IAAKyD,EAAM,GACX1D,GAAI0D,EAAM,GACVG,QAAS,EAAKpB,YAEd,0BAAMqB,cAAY,QAAlB,UAKN,QACE,OACE,wBAAIH,UAAU,aACX,EAAKrG,MAAM4E,aAAewB,EAAM,GAEjC,uBAAGC,UAAU,YAAYC,KAAM,KAAO/E,EACtCoB,IAAKyD,EAAM,GACX1D,GAAI0D,EAAM,GACVG,QAAS,EAAKpB,YAEbiB,EAAM,IAGP,uBAAGC,UAAU,YACb1D,IAAKyD,EAAM,GACX1D,GAAI0D,EAAM,IAETA,EAAM,SASXK,EAAO3E,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACrB,kBAAC,EAAD,CACAE,IAAKH,EAAKE,GACVA,GAAIF,EAAKE,GACTuC,UAAa,EAAKA,UAClBG,WAAc,EAAKA,WACnBF,UAAa,EAAKA,UAClB3D,KAAMA,OAKR,OAAIK,EACO,yCAAeA,EAAM8E,SACpB7E,EAIN,6BACE,kBAAC8E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CAAQ/F,SAAUD,KAAKP,SACvB,kBAACqG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAatF,KAAMA,EAAMT,SAAUD,KAAKa,MAAON,MAAOP,KAAKb,MAAM0B,SAEnE,kBAACkF,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAgB/F,SAAUD,KAAKqC,YAEjC,kBAAC0D,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAatF,KAAMA,EAAMT,SAAUD,KAAKiD,MAAOA,MAAOjD,KAAKb,MAAM8D,UAGrE,kBAAC6C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CAAY/F,SAAUD,KAAKmD,MAAOA,MAAOnD,KAAKb,MAAMgE,UAGxD,+BAGJ,kBAAC2C,EAAA,EAAD,KACGF,GAEH,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,yBAAKR,UAAW,kBACd,wBAAI3D,GAAG,eAAe2D,UAAU,cAC7BF,OAjCN,qD,GAhQAhG,IAAMC,WA4SnB0G,E,YACJ,WAAY/G,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT4B,MAAO,KACPC,UAAU,EACVC,MAAO,GACPiF,UAAW,KACXC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,UAAW,KACXC,QAAQ,EACRC,KAAM,GACNC,UAAW,GACXC,QAAS,IAEb,EAAKC,UAAY,EAAKA,UAAU/G,KAAf,gBACjB,EAAKwE,UAAY,EAAKA,UAAUxE,KAAf,gBACjB,EAAK2E,WAAa,EAAKA,WAAW3E,KAAhB,gBAClB,EAAKyE,UAAY,EAAKA,UAAUzE,KAAf,gBAnBF,E,uEAsBTc,GACRV,KAAKd,MAAMmF,UAAUrE,KAAKd,MAAMwB,KAAMV,KAAKd,MAAM2C,M,gCAGzCA,GACR7B,KAAKd,MAAMkF,UAAUvC,K,iCAGZA,GACT7B,KAAKd,MAAMqF,WAAW1C,K,kCAIpB7B,KAAKG,SAAS,CAACoG,QAAQ,M,0CAGN,IAAD,OAEhB,GAAW,UADAvG,KAAKd,MAAMwB,KAEpB,IAAIqE,EAAW,UAEXA,EAAW,QACjB,IAAIC,EAAM,gCAAgCD,EAAS,IAAI/E,KAAKd,MAAM2C,GAAG,2DAGjEyE,EAAY,GAChBnF,MAHA6D,GAAO,mDAIJ5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACG,GAA4B,qBAAlBA,EAAOqF,OAEb,IAAI,IAAIC,EAAI,EAAGA,EAAItF,EAAOqF,OAAO3B,QAAQ6B,OAAQD,IAET,WAAjCtF,EAAOqF,OAAO3B,QAAQ4B,GAAGnG,OAExB4F,EAAY/E,EAAOqF,OAAO3B,QAAQ4B,GAAG/E,KAIjD,IAAI0E,EAAO,GACX,GAA6B,qBAAnBjF,EAAOwF,QAEb,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAEiB,qBAA3BzF,EAAOwF,QAAQP,KAAKQ,KAC5BR,EAAKQ,GAAK,CAAC,GAAMzF,EAAOwF,QAAQP,KAAKQ,GAAGnF,GAAI,KAAQN,EAAOwF,QAAQP,KAAKQ,GAAGhF,OAGnF,IAAIyE,EAAY,GAChB,GAA6B,qBAAnBlF,EAAOwF,QAEb,IAAQC,EAAI,EAAGA,EAAIzF,EAAOwF,QAAQE,KAAKH,OAAQE,IAEZ,YAA9BzF,EAAOwF,QAAQE,KAAKD,GAAGE,KACxBT,EAAUhC,KAAK,CAAC,GAAMlD,EAAOwF,QAAQE,KAAKD,GAAGnF,GAAI,KAAQN,EAAOwF,QAAQE,KAAKD,GAAGhF,OAGxF,IAAI0E,EAAU,GACd,GAA6B,qBAAnBnF,EAAOwF,QAEb,IAAQC,EAAI,EAAGA,EAAIzF,EAAOwF,QAAQE,KAAKH,OAAQE,IAEZ,cAA9BzF,EAAOwF,QAAQE,KAAKD,GAAGE,KACxBR,EAAQjC,KAAK,CAAC,GAAMlD,EAAOwF,QAAQE,KAAKD,GAAGnF,GAAI,KAAQN,EAAOwF,QAAQE,KAAKD,GAAGhF,OAGxF,EAAK7B,SAAS,CACZa,UAAU,EACVC,MAAOM,EACP2E,UAAW,mCAAqC3E,EAAO4F,YACvDhB,OAAQ5E,EAAO6F,aAAaC,QAC5Bf,UAAWA,EACXE,KAAMA,EACNC,UAAWA,EACXC,QAASA,IAEX,IAAI1B,EAAM,6CAA+CzD,EAAO6F,aAAaC,QAC7ElG,MAAM6D,GAAK5D,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAQF,MAAK,SAACwE,GAEzC,IAAIQ,EAAYR,EAAKQ,UACJ,QAAdA,IACDA,EAAY,MACd,IAAIC,EAAaT,EAAKS,WACJ,QAAfA,IACDA,EAAa,MAEf,EAAKlG,SAAS,CACZiG,UAAWA,EACXC,WAAYA,UAIlB,SAACtF,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,+BAMF,IAAD,SACyFf,KAAKb,MAA1E8B,GADpB,EACGF,MADH,EACUC,SADV,EACoBC,OAAOmF,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,WAAYC,EADlD,EACkDA,UAAWE,EAD7D,EAC6DA,KAAMC,EADnE,EACmEA,UAAWC,EAD9E,EAC8EA,QAC7EY,EAAU,8BAAgCtH,KAAKb,MAAMgH,OAAS,kBAC9D3E,OAA0B+F,IAAjBtG,EAAMO,OAAuBP,EAAMO,OAAOE,KAAI,SAAA6D,GACzD,OAAO,kBAAC,IAAD,CAAUC,UAAU,QAAQE,QAAS,kBAAM,EAAKnB,WAAWgB,EAAM1D,KAAK2F,MAAO,CAACC,OAAQ,YAAclC,EAAMvD,SAChH,+BAEC0F,OAA6BH,IAAdd,EAA0BA,EAAU/E,KAAI,SAAA6D,GAC3D,OAAO,8BAAM,uBAAGE,KAAK,kCAAkCC,QAAS,kBAAM,EAAKtB,UAAUmB,EAAM1D,KAAKA,GAAI0D,EAAM1D,IAAK0D,EAAMvD,MAA9G,WACJ,+BAEC2F,OAAyBJ,IAAZb,EAAwBA,EAAQhF,KAAI,SAAA6D,GACrD,OAAO,8BAAM,uBAAGE,KAAK,kCAAkCC,QAAS,kBAAM,EAAKtB,UAAUmB,EAAM1D,KAAKA,GAAI0D,EAAM1D,IAAK0D,EAAMvD,MAA9G,WACJ,+BAEC4F,OAAoBL,IAATf,EAAqBA,EAAK9E,KAAI,SAAA6D,GAC7C,OAAO,wBAAIC,UAAU,QAAO,uBAAGC,KAAK,kCAAkCC,QAAS,kBAAM,EAAKtB,UAAUmB,EAAM1D,KAAKA,GAAI0D,EAAM1D,IAAK0D,EAAMvD,UACjI,+BAEC6F,EAAqB,IAAbvB,EAAkB,GAChC,yBAAKwB,MAAM,eACP,kBAAC,IAAD,CAAYC,QAAQ,UAAUxB,OAAQvG,KAAKb,MAAMoH,OAAQyB,QAAS1B,EAAW2B,QAAS,kBAAM,EAAK9H,SAAS,CAACoG,QAAQ,OAEnH,yBAAKb,QAAS1F,KAAK2G,UAAWa,MAAO,CAACU,MAAM,OAAQC,OAAO,OAAQV,OAAQ,WAAYW,IAAI,6DAA6DC,SAAO,KAEnK,OACI,kBAACtC,EAAA,EAAD,CAAKuC,GAAI,EAAGtC,GAAI,EAAGuC,GAAI,GACnB,kBAACC,EAAA,EAAD,CAAMhD,UAAU,QACZ,yBAAKA,UAAU,qDACb,kBAACgD,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMN,IAAKpI,KAAKb,MAAM+G,UAAWV,UAAU,sBAAsBE,QAAS1F,KAAKqE,YACjG,yBAAKmB,UAAU,4DAAf,yBAC0B,kBAAC,IAAD,CAAiBmD,KAAMC,IAASpB,MAAO,CAACqB,MAAO,WAG3E,kBAACL,EAAA,EAAKM,KAAN,KACwB,UAAnB9I,KAAKd,MAAMwB,KACV,kBAAC8H,EAAA,EAAKO,MAAN,KAAa9H,EAAM+H,MAAnB,KAA6B,IAAI3F,KAAKpC,EAAMgI,cAAc3F,cAA1D,KACA,2BAAG,kBAACkF,EAAA,EAAKO,MAAN,CACLvD,UAAU,gBACVE,QAAS1F,KAAKkJ,aAAcjI,EAAMe,KAF7B,KAEsC,IAAIqB,KAAKpC,EAAMkI,gBAAgB7F,cAFrE,MAKe,UAAnBtD,KAAKd,MAAMwB,KAAmB,kBAAC8H,EAAA,EAAKY,SAAN,mBAA2BnI,EAAMoI,kBAAjC,IAAoD,6BACnF,0CAD+B,IACT,0BAAM7D,UAA4B,YAAhBvE,EAAMqI,QAAwC,SAAhBrI,EAAMqI,OAAoB,YAAc,eAAxF,OAA+GrI,EAAMqI,SACzI,+BACDzB,EACD,kBAACW,EAAA,EAAKe,KAAN,CAAW/D,UAAU,eACnB,kBAACgE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,iBAAiB,QACrB,kBAACC,EAAA,EAAD,CAAKC,SAAS,OAAOZ,MAAM,QACzB,6BACA,kBAAClD,EAAA,EAAD,KACE,6BACwB,MAArB9F,KAAKb,MAAMgH,OACV,8BAAM,0BAAMX,UAAU,mBAAmBqE,YAAU,aAAaC,aAAY9J,KAAKb,MAAMgH,OAAQ4D,aAAW,OAC5G,uBAAGzJ,OAAO,SAASmF,KAAM6B,GACvB,yBAAK0B,MAAM,eAAeZ,IAAI,sFAE9B,+BAEa,MAAd/B,EACC,8BAAM,0BAAMmB,MAAO,CAAC,cAAe,SAA7B,OAA6CnB,GAAkB,0BAAMmB,MAAO,CAAC,YAAa,UAA3B,OAA+C,0BAAMA,MAAO,CAAC,YAAa,QAAS,MAAS,SAA7C,WAAmEpB,EAAnE,WACpH,iCAIN,kBAACN,EAAA,EAAD,CAAKN,UAAU,YACZhE,GAEgB,IAAlBP,EAAM+I,UAAoC,MAAlB/I,EAAM+I,SAE7B,kBAAClE,EAAA,EAAD,KACE,kBAACmE,EAAA,EAAD,CAAWP,iBAAiB,KAC1B,kBAACO,EAAA,EAAUC,OAAX,CAAkB/H,GAAIgI,IAAQzB,QAAQ,OAAOkB,SAAS,KACpD,kBAAC,IAAD,CAAiBjB,KAAMyB,MADzB,eAGA,kBAACH,EAAA,EAAUI,SAAX,CAAoBT,SAAS,KAC3B,8BAAO3I,EAAM+I,aAInB,gCAGJ,kBAACL,EAAA,EAAD,CAAKC,SAAS,OAAOZ,MAAM,QACzB,6BADF,gBAEgBtB,EACd,6BAHF,cAIcC,EACZ,6BACA,uCACA,4BACGC,c,GAzNTtI,IAAMC,WAsOfkE,I,2CC5hBT6G,E,YACF,WAAYpL,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT4B,MAAO,KACPC,UAAU,EACVC,MAAO,GACPsJ,MAAO,EAAKrL,MAAMqL,OAEtB,EAAKC,YAAc,EAAKA,YAAY5K,KAAjB,gBARJ,E,yEAWP6K,GACVzK,KAAKd,MAAMwG,QAAQ+E,K,0CAGA,IAAD,OACZzF,EAAM,mCAAmChF,KAAKb,MAAMoL,MAAM,2DAC9DpJ,MAAM6D,GACH5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKpB,SAAS,CACZa,UAAU,EACVC,MAAOM,EAAOmJ,QACd1I,KAAMT,EAAOoJ,mBAGjB,SAAC5J,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,+BAMF,IAAD,SAC8Bf,KAAKb,MAAhC4B,EADH,EACGA,MAAOC,EADV,EACUA,SAAUC,EADpB,EACoBA,MACzB,OAAIF,EACO,yCAAeA,EAAM8E,SACpB7E,EAIN,6BACE,kBAAC8E,EAAA,EAAD,KAEE7E,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACR,kBAAC,EAAD,CACAE,IAAKH,EAAKE,GACVG,KAAML,EAAKK,KACXH,GAAIF,EAAKE,GACT4I,cAAe9I,EAAK8I,cACpB/E,QAAW,EAAK8E,YAChBD,MAAO,EAAKpL,MAAMoL,aAbnB,qD,GA1CMjL,IAAMC,WAmEzBqL,E,YACF,WAAY1L,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT4B,MAAO,KACPC,UAAU,EACVC,MAAO,GACPiF,UAAW,MAEf,EAAKsE,YAAc,EAAKA,YAAY5K,KAAjB,gBARJ,E,2EAYfI,KAAKd,MAAMwG,QAAQ1F,KAAKd,MAAMuL,iB,0CAGb,IAAD,OACZzF,EAAM,mCAAmChF,KAAKd,MAAMqL,MAAM,WAAWvK,KAAKd,MAAMuL,cAAc,2DAClGtJ,MAAM6D,GACH5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKpB,SAAS,CACZa,UAAU,EACVC,MAAOM,EACP2E,UAAW3E,EAAO4F,iBAGtB,SAACpG,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,+BAMF,IAAD,EAC8Bf,KAAKb,MAAf8B,GADpB,EACGF,MADH,EACUC,SADV,EACoBC,OACnB4J,EAAmC,MAAlB5J,EAAM6J,SAAmB,EAAI7J,EAAM6J,SAAShE,OACnE,OACI,kBAACf,EAAA,EAAD,CAAKuC,GAAI,EAAGtC,GAAI,EAAGuC,GAAI,GACA,GAAlBsC,EAAsB,+BAEvB,kBAACrC,EAAA,EAAD,CAAMhD,UAAU,qBAAqBE,QAAS1F,KAAKwK,aACtB,MAAxBxK,KAAKb,MAAM+G,UACV,kBAACsC,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMN,IAAK,mCAAqCpI,KAAKb,MAAM+G,UAAWV,UAAU,UAClG,+BAEF,kBAACgD,EAAA,EAAKM,KAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,KAAa/I,KAAKd,MAAM8C,KAAxB,KAAgC6I,EAAhC,KACA,kBAACrC,EAAA,EAAKe,KAAN,CAAW/D,UAAU,eAAevE,EAAM8J,iB,GAnD7CzL,IAAMC,WA4DZ+K,I,kCCvHTU,G,OAAa,CACfC,kBAAmB,CAEjBC,WAAY,CAAE/G,IAAK,IAAMD,IAAK,KAC9BjD,MAAO,GAETkK,QAAS,CACPD,WAAY,CAAE/G,IAAK,IAAMD,IAAK,MAC9BjD,MAAO,GAETmK,OAAQ,CACNF,WAAY,CAAE/G,IAAK,KAAMD,IAAK,KAC9BjD,MAAO,GAEToK,OAAQ,CACNH,WAAY,CAAE/G,IAAK,IAAKD,IAAK,GAC7BjD,MAAO,KA2Ib,SAASqK,EAAeC,GACpB,OAAU,MAAPA,EACQ,EAEAA,EAAIC,QAAQ,GAAG3H,QAAQ,0BAA2B,OAGlD4H,O,YA7IX,WAAYvM,GAAQ,IAAD,sBACjB,4CAAMA,IACN,IAAIwM,EAASC,IAAYC,MAAM,EAAK1M,MAAMwE,QAAQC,SAASlE,QAF1C,OAGjB,EAAKN,MAAQ,CACX0C,GAAI6J,EAAO7J,GACXnB,KAAMgL,EAAOhL,KACbmL,KAAM,GACNrF,KAAM,IAGR,EAAKsF,YAAc,CACjB,CACIC,UAAW,eACXC,KAAM,GACN1J,MAAM,EACN5B,KAAM,SACNuL,UAAW,EAAKC,eAEpB,CACAH,UAAW,OACXC,KAAM,OACN1J,MAAM,EACN5B,KAAM,UAZW,CAenB,CACEqL,UAAW,KACXC,KAAM,KACNG,QAAQ,IAIV,EAAK3B,YAAc,EAAKA,YAAY5K,KAAjB,gBAhCF,E,yEAmCP6K,GACRzK,KAAKd,MAAMwE,QAAQe,KAAK,CACpBb,SAAU,YACVnE,OAAQ,UAAUO,KAAKb,MAAM0C,GAAG,WAAa4I,M,oCAIvC2B,EAAMC,GAChB,OAAO,kBAAC7D,EAAA,EAAKC,IAAN,CAAUjB,MAAO,CAACU,MAAO,OAAQE,IAAM,mCAAqCgE,M,6HAK/E1L,EAAOV,KAAKb,MAAMuB,KAMlBsE,EAAM,iCALC,UAARtE,EACgB,KAEA,SAEgC,IAAIV,KAAKb,MAAM0C,GAAG,2DACrEmD,GAAO,kDACPsH,QAAQC,IAAIvH,G,mBACK7D,MAAM6D,GAAK5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,W,OAAxCuK,E,OAEJS,QAAQC,IAAIV,GAEZ7L,KAAKG,SAAS,CACV0L,KAAMA,EACNrF,KAAMqF,EAAK9E,QAAQP,O,iFAIjB,IAAD,EACqBxG,KAAKb,MAAnB0M,GADP,EACGhK,GADH,EACOgK,MAAMrF,EADb,EACaA,KACZgG,OAAiCjF,IAArBsE,EAAK1E,YAA4B,GAAK,mCAAqC0E,EAAK1E,YAE5FS,OAAoBL,IAATf,EAAqBA,EAAK9E,KAAI,SAAA6D,GAC3C,OAAQ,6BACR,kBAACiD,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMN,IAAK,mCAAqC7C,EAAMkH,aAAcjH,UAAU,gBAAgBgC,MAAO,CAACU,MAAO,SAC/H,kBAACM,EAAA,EAAKO,MAAN,KAAaxD,EAAMvD,UAElB,+BAEP,OACE,6BACI,kBAAC8D,EAAA,EAAD,KACI,kBAAC4G,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWC,KAAZ,CAAiBlH,KAAM,KAAOzF,KAAKb,MAAMuB,MAAzC,QACoB,UAAnBV,KAAKb,MAAMuB,KAEZ,kBAACgM,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,GAAEf,EAAK7J,MAE9B,kBAAC0K,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,GAAEf,EAAK7C,SAItC,kBAAClD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACwC,EAAA,EAAKC,IAAN,CAAUL,IAAKoE,EAAWK,WAAS,KAEvC,kBAAC9G,EAAA,EAAD,CAAKC,GAAI,GACe,UAAnBhG,KAAKb,MAAMuB,KACV,kBAAC8H,EAAA,EAAKO,MAAN,KAAa8C,EAAK7J,MAClB,kBAACwG,EAAA,EAAKO,MAAN,KAAa8C,EAAK7C,OAEA,UAAnBhJ,KAAKb,MAAMuB,KACV,kBAAC8H,EAAA,EAAKY,SAAN,KAAgByC,EAAK1C,eAArB,MAAuC,kBAAC,IAAD,CAAiBR,KAAMmE,MAA9D,IAA2FjB,EAAKkB,iBAAhG,SACA,kBAACvE,EAAA,EAAKY,SAAN,KAAgByC,EAAK5C,aAArB,MAAqC,kBAAC,IAAD,CAAiBN,KAAMmE,MAA5D,IAAyFjB,EAAKmB,QAA9F,WAA8G,kBAAC,IAAD,CAAiBrE,KAAMsE,MAArI,IAAuK3B,EAAeO,EAAKqB,QAA3L,MAAsM,kBAAC,IAAD,CAAiBvE,KAAMsE,MAA7N,IAA+P3B,EAAeO,EAAKsB,UAIjRtB,EAAKuB,gBAAkBvB,EAAK7C,MAC5B,kBAACR,EAAA,EAAKY,SAAN,KAAgByC,EAAKuB,gBACnB,+BAEN,6BACA,2BAAG,uCAAH,IAAoBvB,EAAK7B,UAEzB,kBAAC,IAAD,CAAUgB,WAAYA,GACjBpD,KAIO,UAAnB5H,KAAKb,MAAMuB,KACZ,6BACI,6BACA,kBAAC8H,EAAA,EAAKO,MAAN,gBACA,kBAACjD,EAAA,EAAD,KACI,kBAAC,EAAD,CAAYyE,MAASvK,KAAKb,MAAM0C,GAChC6D,QAAW1F,KAAKwK,gBAItB,oC,GAjIKlL,IAAMC,WC3BnB8N,G,YACF,WAAYnO,GAAQ,IAAD,sBACf,4CAAMA,IACN,IAAIwM,EAASC,IAAYC,MAAM,EAAK1M,MAAMwE,QAAQC,SAASlE,QAF5C,OAGf,EAAKN,MAAQ,CACT4B,MAAO,KACPC,UAAU,EACVC,MAAO,GACPwJ,cAAeiB,EAAO4B,OACtB/C,MAAOmB,EAAOnB,OARH,E,iFAYE,IAAD,OACdvF,EAAM,mCAAmChF,KAAKb,MAAMoL,MAAM,2DAC5DpJ,MAAM6D,GACH5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKpB,SAAS,CACZ6B,KAAMT,EAAOoJ,mBAGjB,SAAC5J,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,aAKJiE,EAAM,mCAAmChF,KAAKb,MAAMoL,MAAM,WAAWvK,KAAKb,MAAMsL,cAAc,2DAClGtJ,MAAM6D,GACH5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKpB,SAAS,CACZa,UAAU,EACVC,MAAOM,EAAOuJ,cAGlB,SAAC/J,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,+BAMA,IAAD,SAC4Bf,KAAKb,MAAhC4B,EADD,EACCA,MAAOC,EADR,EACQA,SAAUC,EADlB,EACkBA,MACzB,OAAIF,EACO,yCAAeA,EAAM8E,SACpB7E,EAIN,6BACE,kBAAC8E,EAAA,EAAD,KACE,kBAAC4G,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,KAAZ,CAAiBlH,KAAK,YAAtB,MACA,kBAACiH,EAAA,EAAWC,KAAZ,CAAiBlH,KAAM,yBAA2BzF,KAAKb,MAAMoL,OAAQvK,KAAKb,MAAM6C,MAChF,kBAAC0K,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,GAAvB,UAAgC5M,KAAKb,MAAMsL,iBAG/C,kBAAC3E,EAAA,EAAD,KAEE7E,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACR,kBAAC,GAAD,CACAE,IAAKH,EAAKE,GACVG,KAAML,EAAKK,KACXH,GAAIF,EAAKE,GACT0L,eAAgB5L,EAAK4L,eACrB9C,cAAe9I,EAAK8I,cACpBF,MAAO,EAAKpL,MAAMoL,aApBnB,qD,GAvDOjL,IAAMC,WAuF1BiO,G,YACF,WAAYtO,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT4B,MAAO,KACPC,UAAU,EACVC,MAAO,GACPiF,UAAW,MANA,E,iFAUE,IAAD,OACZlB,EAAM,mCAAmChF,KAAKd,MAAMqL,MAAM,WAAWvK,KAAKd,MAAMuL,cAAc,YAAYzK,KAAKd,MAAMqO,eAAe,2DACxIpM,MAAM6D,GACH5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKpB,SAAS,CACZa,UAAU,EACVC,MAAOM,EACP2E,UAAW3E,EAAOkM,gBAGtB,SAAC1M,GACC,EAAKZ,SAAS,CACZa,UAAU,EACVD,e,+BAMF,IAAD,EAC8Bf,KAAKb,MAAf8B,GADpB,EACGF,MADH,EACUC,SADV,EACoBC,OACzB,OACI,kBAAC8E,EAAA,EAAD,CAAKuC,GAAI,EAAGtC,GAAI,EAAGuC,GAAI,GACnB,kBAACC,EAAA,EAAD,CAAMhD,UAAU,QACa,MAAxBxF,KAAKb,MAAM+G,UACV,kBAACsC,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMN,IAAK,mCAAqCpI,KAAKb,MAAM+G,YAC7E,+BAEF,kBAACsC,EAAA,EAAKM,KAAN,KACI,kBAACN,EAAA,EAAKO,MAAN,KAAa/I,KAAKd,MAAM8C,MACxB,6BACA,kBAACwG,EAAA,EAAKe,KAAN,KACE,0BAAM/D,UAAU,eAAevE,EAAM+I,UACrC,6BAAS,6BACT,0BAAMxE,UAAU,eAAevE,EAAM8J,kB,GA/CzCzL,IAAMC,WAwDb8N,M,UCuEAK,I,mBAnNb,WAAYxO,GAAQ,IAAD,sBACjB,4CAAMA,IACN,IAAIwM,EAASC,IAAYC,MAAM,EAAK1M,MAAMwE,QAAQC,SAASlE,QAF1C,OAGjB,EAAKN,MAAQ,CACT0C,GAAI6J,EAAOlH,QACXzD,MAAO,KACPC,UAAU,EACV6K,KAAM,GACN9E,QAAS,IAEb,EAAK4G,QAAU,CAAC,CACZ5B,UAAW,QACXC,KAAM,QACN1J,MAAM,EACN5B,KAAM,SACNuL,UAAW,EAAK2B,gBACf,CACD7B,UAAW,OACXC,KAAM,aACN1J,MAAM,EACN5B,KAAM,UACL,CACDqL,UAAW,eACXC,KAAM,eACN1J,MAAM,EACN5B,KAAM,QACL,CACDqL,UAAW,aACXC,KAAM,cACN1J,MAAM,EACN5B,KAAM,UAER,CACEqL,UAAW,eACXC,KAAM,kBACN1J,MAAM,EACN5B,KAAM,SACNuL,UAAW,EAAK4B,iBAElB,CACE9B,UAAW,KACXC,KAAM,KACNG,QAAQ,IA1CK,E,6KAgDDnM,KACZ8N,EAAU,uCAAuC9N,KAAKb,MAAM0C,GAAG,2D,mBAClDV,MAAM2M,GAAS1M,MAAK,SAAAC,GAAG,OAAIA,EAAIC,W,cAA5CuK,E,OAEA9E,EAAU,GAEV/B,EAAM,uCAAuChF,KAAKb,MAAM0C,GAAG,4E,mBACzDV,MAAM6D,GAAK5D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MACrC,SAAOG,GAAP,iBAAAgB,EAAAwL,OAAA,gDACQ9G,EAAO,QACeM,WAAhBhG,EAAO0F,MACb1F,EAAO0F,KAAK+G,SAAQ,SAASC,EAAQrM,GACjC,IAAIgE,EAAOqI,EACPpM,EAAKoM,EAAQpM,GACbqM,EAAOD,EAAQ/G,IACnB3F,EAAO0F,KAAKkH,OAAOvM,EAAM,GACzBL,EAAO0F,KAAK+G,SAAQ,SAASI,EAASC,GAC/BxM,IAAOuM,EAASvM,IAAMD,IAAUyM,IAG/BH,GAAQ,KAAOE,EAASlH,IACxB3F,EAAO0F,KAAKkH,OAAOE,EAAO,OAGR,qBAAhB9M,EAAOiF,MACbjF,EAAOiF,KAAKwH,SAAQ,SAASM,EAASC,GAC/B1M,IAAOyM,EAASzM,KAEfqM,GAAQ,KAAOI,EAASE,UACxBjN,EAAOiF,KAAK2H,OAAOI,EAAO,OAKtC3I,EAAKsI,KAAOA,EACZjH,EAAKxC,KAAKmB,MAIdY,EAAO,QACee,WAAhBhG,EAAOiF,MACbjF,EAAOiF,KAAKwH,SAAQ,SAASC,EAAQrM,GACjC,IAAIgE,EAAOqI,EACPpM,EAAKoM,EAAQpM,GACbqM,EAAOD,EAAQO,UACnBjN,EAAOiF,KAAKwH,SAAQ,SAASI,EAASC,GAC/BxM,IAAOuM,EAASvM,IAAMD,IAAUyM,IAG/BH,GAAQ,KAAOE,EAASI,UACxBjN,EAAOiF,KAAK2H,OAAOE,EAAO,OAGlCzI,EAAKsI,KAAOA,EACZ1H,EAAK/B,KAAKmB,MAIJY,EAAKiI,OAAOxH,GAClB+G,SAAQ,SAAeC,EAAQrM,GAAvB,mBAAAW,EAAAwL,OAAA,uDACRxI,EAAQ0I,EAEA,QADRvN,EAAOuN,EAAQS,cAEfnJ,EAAMyD,MAAQiF,EAAQjM,KACtBuD,EAAM0D,aAAegF,EAAQ9E,gBAG7BnE,EAAM,gCAAgCtE,EAAK,IAAIuN,EAAQpM,GAAG,2DAC9DmD,GAAO,0CATK,WAAAzC,EAAA,MAUNpB,MAAM6D,GAAK5D,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAQF,MAAM,SAAMuN,GAAN,SAAApM,EAAAwL,OAAA,kFAVrC,OA0CZhH,EAAQtC,KAAKc,GA1CD,wCA6ClB,EAAKpF,SAAS,CACZa,UAAU,EACV+F,QAASA,EACT8E,KAAMA,IAnGV,yC,sFAyGSO,EAAMC,GACnB,OAAO,2BAAKD,K,sCAGEA,EAAMC,GAClB,GAAuB,MAApBA,EAAIuC,cAA4C,IAApBvC,EAAIuC,aAC/B,OAAO,6BAAK,8BAAQxC,EAAR,Q,+BAGV,IAAD,EACgCpM,KAAKb,MAAhC0M,GADL,EACChK,GADD,EACKgK,MAAM9E,EADX,EACWA,QACZyF,GAFC,EACoBxL,cACauG,IAAtBsE,EAAKY,aAA6B,GAAK,mCAAqCZ,EAAKY,cAOnG,OAAKzM,KAAKb,MAAM6B,SAKZ,6BACI,kBAAC8E,EAAA,EAAD,KACI,kBAAC4G,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWC,KAAZ,CAAiBlH,KAAK,YAAtB,QACJ,kBAACiH,EAAA,EAAWC,KAAZ,CAAiBC,QAAM,GAAEf,EAAK7J,QAGlC,kBAAC8D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC6I,GAAA,EAAD,CAAOzG,IAAKoE,EAAWK,WAAS,KAEpC,kBAAC9G,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,IAAD,CACA8I,SAAS,KACTlJ,KAAMmB,EACN4G,QAAS3N,KAAK2N,QACdoB,cA1BO,CAAC,CACpBhD,UAAW,eACX9I,MAAO,SAyBK+L,SAAO,EACPC,iBAAiB,eAtBxB,yBAAKzJ,UAAU,OAAf,kB,GArLMlG,IAAMC,Y,gCC4FV2P,OA/Ef,WACE,OACE,6BACE,kBAAC1F,EAAA,EAAD,KACI,kBAAC,KAAD,KACE,6BACE,yBAAK1B,MAAM,2DACT,wBAAIA,MAAM,sBACV,wBAAIA,MAAM,YACN,uBAAGA,MAAM,gBAAe,kBAAC,KAAD,CAASqH,GAAG,SAAQ,kBAAC,IAAD,CAAiBxG,KAAMyG,MAA3C,WAE1B,wBAAItH,MAAM,YACR,uBAAGA,MAAM,gBAAe,kBAAC,KAAD,CAASqH,GAAG,WAAU,kBAAC,IAAD,CAAiBxG,KAAM0G,MAA7C,aAE1B,wBAAIvH,MAAM,YACR,uBAAGA,MAAM,gBAAe,kBAAC,KAAD,CAASqH,GAAG,WAAU,kBAAC,IAAD,CAAiBxG,KAAM2G,MAA7C,YAKhC,6BACA,6BACA,6BACA,6BACA,kBAAC,KAAD,CAAOC,KAAK,QAASC,OAAQ,gBAAE9L,EAAF,EAAEA,QAAF,OACvB,kBAAC,EAAD,CACAA,QAASA,OAKf,kBAAC,KAAD,CAAO6L,KAAK,UAAWC,OAAQ,gBAAE9L,EAAF,EAAEA,QAAF,OACzB,kBAAC,EAAD,CACAA,QAASA,OAKf,kBAAC,KAAD,CAAO6L,KAAK,UAAWC,OAAQ,gBAAE9L,EAAF,EAAEA,QAAF,OACzB,kBAAC,EAAD,CACAA,QAASA,OAKf,kBAAC,KAAD,CAAO6L,KAAK,WAAYC,OAAQ,gBAAE9L,EAAF,EAAEA,QAAF,OAC1B,kBAAC,EAAD,CACAA,QAASA,OAKf,kBAAC,KAAD,CAAO6L,KAAK,YAAaC,OAAQ,gBAAE9L,EAAF,EAAEA,QAAF,OAC3B,kBAAC,GAAD,CACAA,QAASA,OAKf,kBAAC,KAAD,CAAO6L,KAAK,QAASC,OAAQ,gBAAE9L,EAAF,EAAEA,QAAF,OACvB,kBAAC,GAAD,CACAA,QAASA,OAKf,kBAAC,KAAD,CAAO6L,KAAK,QAASC,OAAQ,gBAAE9L,EAAF,EAAEA,QAAF,OACvB,kBAAC,GAAD,CACAA,QAASA,WC3EP+L,QACW,cAA7BC,OAAO/L,SAASgM,UAEe,UAA7BD,OAAO/L,SAASgM,UAEhBD,OAAO/L,SAASgM,SAASC,MACvB,2DCVNC,IAASL,OAAO,kBAAC,GAAD,MAASM,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9O,MAAK,SAAA+O,GACjCA,EAAaC,iB","file":"static/js/main.37d8e777.chunk.js","sourcesContent":["import React from 'react';\r\nimport {ListGroup, ListGroupItem} from 'react-bootstrap';\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }  \r\n\r\n    render() {\r\n      return (\r\n        <ListGroup>\r\n          <ListGroupItem>Corriger tableau pour une personne</ListGroupItem>\r\n          <ListGroupItem>Ajout utilisateurs (Inscription / Connection / Profil)</ListGroupItem>\r\n          <ListGroupItem>Ajout wishlist par utilisateur</ListGroupItem>\r\n          <ListGroupItem>Faire une page spécifique en cliquant sur image d'un film</ListGroupItem>\r\n          <ListGroupItem>Modifier affichage mobile</ListGroupItem>\r\n          <ListGroupItem>Attendre que les années soient changées avant de regénérer</ListGroupItem>\r\n        </ListGroup>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        search: null,\r\n        timer: null,\r\n        timerInterval: 500, //If user stop writing for 0.5 seconds in the input, it triggers a search\r\n      };\r\n      this.search = this.search.bind(this);\r\n      this.onInputChange = this.onInputChange.bind(this);\r\n      this.startTimer = this.startTimer.bind(this);\r\n    }\r\n\r\n    search()\r\n    {\r\n      var searchValue = this.state.search;\r\n      if(this.state.timer != 0){\r\n        this.props.onChange(searchValue);\r\n      }\r\n    }\r\n\r\n    startTimer()\r\n    {\r\n      clearTimeout(this.state.timer);\r\n      this.setState({\r\n        timer: setTimeout(this.search, this.state.timerInterval)\r\n      });\r\n    }\r\n\r\n    onInputChange(e)\r\n    {\r\n      this.setState({search: e.target.value});\r\n      this.startTimer();\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <Form.Control \r\n        type=\"text\" \r\n        placeholder=\"Search...\" \r\n        onChange={this.onInputChange}\r\n        />\r\n      )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\nclass GenreFilter extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.genre = this.genre.bind(this);\r\n      this.getData = this.getData.bind(this);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n      }  \r\n\r\n    getData()\r\n    {\r\n        var type = this.props.type;\r\n        if(type == \"series\")\r\n          var typeEndpoint = \"tv\";\r\n        else\r\n          var typeEndpoint = \"movie\";\r\n        var endpoint = \"genre/\" + typeEndpoint + \"/list\";\r\n        var url = \"https://api.themoviedb.org/3/\" + endpoint + \"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.genres,\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n  \r\n    genre(e)\r\n    {\r\n      var value = e.target.value;\r\n      this.props.onChange(value);\r\n    }\r\n    \r\n    render() {\r\n        const {items} = this.state;\r\n        const options = items.map((item, index) => (\r\n            this.props.value == item.id ?\r\n            <option\r\n              key={item.id}\r\n              value={item.id}\r\n              selected\r\n            >\r\n            {item.name}\r\n            </option>\r\n            :\r\n            <option\r\n              key={item.id}\r\n              value={item.id}\r\n            >\r\n            {item.name}\r\n            </option>\r\n          ));\r\n      return (\r\n        <Form.Group>\r\n          <Form.Label>Genre</Form.Label>\r\n          <Form.Control as=\"select\" onChange={this.genre}>\r\n            <option value=\"All\" selected>All</option>\r\n            {options}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      )\r\n    }\r\n}\r\n\r\nexport default GenreFilter;","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\nclass LanguageFilter extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.language = this.language.bind(this);\r\n      this.getData = this.getData.bind(this);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n      }  \r\n\r\n    getData()\r\n    {\r\n        var url = \"https://api.themoviedb.org/3/configuration/languages?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              /*Order array by language name*/\r\n              result.sort(function(a, b) {\r\n                var textA = a.english_name.toUpperCase();\r\n                var textB = b.english_name.toUpperCase();\r\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n              });\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n  \r\n    language(e)\r\n    {\r\n      var value = e.target.value;\r\n      this.props.onChange(value);\r\n    }\r\n    \r\n    render() {\r\n        const {items} = this.state;\r\n        const options = items.map((item, index) => (\r\n            <option\r\n                key={item.iso_639_1}\r\n                value={item.iso_639_1}\r\n            >\r\n            {item.english_name}\r\n            </option>\r\n          ));\r\n      return (\r\n        <Form.Group>\r\n          <Form.Label>Original Language</Form.Label>\r\n          <Form.Control as=\"select\" onChange={this.language}>\r\n            <option value=\"All\" selected>All</option>\r\n            {options}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      )\r\n    }\r\n}\r\n\r\nexport default LanguageFilter;","import React from 'react';\r\nimport {Form} from 'react-bootstrap';\r\nclass OrderFilter extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        items: {\r\n            movies : [\"original_title.asc\", \"original_title.desc\", \"popularity.asc\", \"popularity.desc\", \"primary_release_date.asc\", \"primary_release_date.desc\", \"release_date.asc\", \"release_date.desc\", \"revenue.asc\", \"revenue.desc\", \"vote_average.asc\", \"vote_average.desc\", \"vote_count.asc\", \"vote_count.desc\"],\r\n            series: [\"first_air_date.desc\", \"first_air_date.asc\", \"popularity.desc\", \"popularity.asc\", \"vote_average.desc\", \"vote_average.asc\"]\r\n        }\r\n      };\r\n      this.order = this.order.bind(this);\r\n    }\r\n\r\n    order(e)\r\n    {\r\n      var value = e.target.value;\r\n      this.props.onChange(value);\r\n    }\r\n    \r\n    render() {\r\n        const {items} = this.state;\r\n        var type = this.props.type;\r\n        var options;\r\n        if(type == \"movies\")\r\n        {\r\n            options = items.movies.map((item, index) => (\r\n                <option\r\n                    key={item}\r\n                    value={item}\r\n                >\r\n                {item}\r\n                </option>\r\n            ));\r\n        }\r\n        else if(type == \"series\")\r\n        {\r\n            options = items.series.map((item, index) => (\r\n                <option\r\n                    key={item}\r\n                    value={item}\r\n                >\r\n                {item}\r\n                </option>\r\n            ));\r\n        }\r\n      return (\r\n        <Form.Group>\r\n            <Form.Label>Genre</Form.Label>\r\n            <Form.Control as=\"select\" onChange={this.order} value={this.props.order}>\r\n            {options}\r\n            </Form.Control>\r\n        </Form.Group>\r\n      )\r\n    }\r\n}\r\n\r\nexport default OrderFilter;","import React from 'react';\r\nimport InputRange from 'react-input-range';\r\nimport \"react-input-range/lib/css/index.css\";\r\nclass YearFilter extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.years = this.years.bind(this);\r\n    }\r\n\r\n    years(e)\r\n    {\r\n      var value = e;\r\n      this.props.onChange(value);\r\n    }\r\n    \r\n    render() {\r\n        var currentYear = new Date().getFullYear();\r\n        var maxValue = currentYear + 3;\r\n        return (\r\n          <InputRange \r\n          minValue={1900}\r\n          maxValue={maxValue}\r\n          value={this.props.years}\r\n          onChange={this.years}\r\n          step={1}\r\n          />\r\n        )\r\n    }\r\n}\r\n\r\nexport default YearFilter;","import React from 'react'\r\nimport './List.css';\r\nimport {Container,Row,Col,Card, Accordion, Button, Tabs, Tab, Badge} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faList, faHeart} from '@fortawesome/free-solid-svg-icons';\r\nimport ModalVideo from 'react-modal-video';\r\nimport Search from './Search';\r\nimport GenreFilter from './GenreFilter';\r\nimport LanguageFilter from './LanguageFilter';\r\nimport OrderFilter from './OrderFilter';\r\nimport YearFilter from './YearFilter';\r\nimport { MDBBadge } from 'mdb-react-ui-kit';\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var type = this.props.history.location.pathname;\r\n        type = type.replace(\"/\", \"\");\r\n        var currentYear = new Date().getFullYear();\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            currentPage: 1,\r\n            perPage: 20,\r\n            countResults: 0,\r\n            search: '',\r\n            type: type,\r\n            genre: 'All',\r\n            language: 'All',\r\n            order: 'popularity.desc',\r\n            years: { min: 1900, max: currentYear }\r\n        };\r\n        this.castClick = this.castClick.bind(this);\r\n        this.infoClick = this.infoClick.bind(this);\r\n        this.pageChange = this.pageChange.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.genre = this.genre.bind(this);\r\n        this.language = this.language.bind(this);\r\n        this.order = this.order.bind(this);\r\n        this.years = this.years.bind(this);\r\n        this.genreClick = this.genreClick.bind(this);\r\n    }\r\n\r\n    castClick(cast_id) {\r\n      this.props.history.push({\r\n          pathname: '/cast',\r\n          search: \"?cast_id=\"+cast_id\r\n      });\r\n    }\r\n\r\n    infoClick(type,id) {\r\n      this.props.history.push({\r\n          pathname: '/info',\r\n          search: \"?type=\" + type + \"&id=\" + id\r\n      });\r\n  }\r\n\r\n    genreClick(genre) {\r\n      this.setState({genre:genre});\r\n      this.genre(genre);\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.getData();\r\n    }      \r\n\r\n    pageChange(event) {\r\n      this.setState({currentPage: Number(event.target.id)},\r\n        () => {this.afterChange();}\r\n      );\r\n    }\r\n\r\n    search(value) {\r\n      this.setState({search: value},\r\n        () => {this.afterChange();}\r\n      );\r\n    }\r\n\r\n    genre(value) {\r\n      this.setState({genre: value},\r\n        () => {this.afterChange();}\r\n      );\r\n    }\r\n\r\n    language(value) {\r\n      this.setState({language: value},\r\n        () => {this.afterChange();}\r\n      );\r\n    }\r\n\r\n    order(value) {\r\n      this.setState({order: value},\r\n        () => {this.afterChange();}\r\n      );\r\n    }\r\n\r\n    years(value) {\r\n      this.setState({years: value},\r\n        () => {this.afterChange();}\r\n      );\r\n    }\r\n\r\n    afterChange() {\r\n      this.getData();\r\n    }\r\n\r\n    getData()\r\n    {\r\n        this.setState({items: []});\r\n        var search = this.state.search;\r\n        var genre = this.state.genre;\r\n        var language = this.state.language;\r\n        var type = this.state.type;\r\n        var order = this.state.order;\r\n        var years = this.state.years;\r\n\r\n        var lowerYear = years.min + \"-01-01\";\r\n        var greaterYear = years.max + \"-12-31\";\r\n\r\n        if(type == \"series\")\r\n          var typeEndpoint = \"tv\";\r\n        else\r\n          var typeEndpoint = \"movie\";\r\n\r\n        if(search != '' && search != null){\r\n            var endpoint = \"search/\" + typeEndpoint;\r\n        }\r\n        else {\r\n          var endpoint = \"discover/\" + typeEndpoint;\r\n        }\r\n\r\n        var url = \"https://api.themoviedb.org/3/\" + endpoint + \"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        if(genre != 'All'){\r\n          url += \"&with_genres=\" + genre;\r\n        }\r\n        if(language != 'All'){\r\n          url += \"&with_original_language=\" + language;\r\n        }\r\n        if(search != '' && search != null)\r\n          url += \"&query=\" + search;\r\n\r\n        url += \"&sort_by=\" + order;\r\n\r\n        if(type == \"movies\")\r\n        {\r\n          url += \"&primary_release_date.gte=\" + lowerYear;\r\n          url += \"&primary_release_date.lte=\" + greaterYear;\r\n        }\r\n        else if(type == \"series\")\r\n        {\r\n          url += \"&first_air_date.gte=\" + lowerYear;\r\n          url += \"&first_air_date.lte=\" + greaterYear;\r\n        }\r\n        url += \"&page=\" + this.state.currentPage;\r\n\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.results,\r\n                countResults: result.total_results\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const { error, isLoaded, items, countResults, type} = this.state;\r\n\r\n        const pageNumbers = [];\r\n        const currentPage = this.state.currentPage;\r\n\r\n        if(countResults > 0)\r\n        {\r\n          if(currentPage != 1)\r\n            pageNumbers.push([1,\"First\"]);\r\n          if(currentPage > 2)\r\n            pageNumbers.push([currentPage-2,currentPage-2]);\r\n          if(currentPage > 1)\r\n            pageNumbers.push([currentPage-1,currentPage-1]);\r\n          pageNumbers.push([currentPage,currentPage]);\r\n          if(currentPage < Math.ceil(countResults / this.state.perPage))\r\n            pageNumbers.push([currentPage+1,currentPage+1]);\r\n          if(currentPage < Math.ceil(countResults / this.state.perPage) - 1)\r\n            pageNumbers.push([currentPage+2,currentPage+2]);\r\n          if(currentPage != Math.ceil(countResults / this.state.perPage))\r\n            pageNumbers.push([Math.ceil(countResults / this.state.perPage),\"Last\"]);\r\n        }\r\n\r\n        const renderPageNumbers = pageNumbers.map(array => {\r\n          switch(array[1])\r\n          {\r\n            case 'First':\r\n              return (\r\n                <li className=\"page-item\">\r\n                  <a className=\"page-link\" href={'#/' + type}\r\n                  key={array[1]}\r\n                  id={array[0]}\r\n                  onClick={this.pageChange}\r\n                  >\r\n                  <span aria-hidden=\"true\">&laquo;</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n              break;\r\n            case 'Last':\r\n              return (\r\n                <li className=\"page-item\">\r\n                  <a className=\"page-link\" href={'#/' + type}\r\n                  key={array[1]}\r\n                  id={array[0]}\r\n                  onClick={this.pageChange}\r\n                  >\r\n                  <span aria-hidden=\"true\">&raquo;</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n              break;\r\n            default:\r\n              return (\r\n                <li className=\"page-item\">\r\n                  {this.state.currentPage != array[0]\r\n                  ?\r\n                  <a className=\"page-link\" href={'#/' + type}\r\n                  key={array[1]}\r\n                  id={array[0]}\r\n                  onClick={this.pageChange}\r\n                  >\r\n                  {array[1]}\r\n                  </a>\r\n                  :\r\n                  <a className=\"page-link\"\r\n                  key={array[1]}\r\n                  id={array[0]}\r\n                  >\r\n                  {array[1]}\r\n                  </a>\r\n                  }\r\n                </li>\r\n              );\r\n              break;\r\n          }\r\n        });\r\n\r\n        const data = items.map((item, index) => (\r\n          <MediaCard\r\n          key={item.id}\r\n          id={item.id}\r\n          castClick = {this.castClick}\r\n          genreClick = {this.genreClick}\r\n          infoClick = {this.infoClick}\r\n          type={type}\r\n          >\r\n          </MediaCard>\r\n        ));\r\n\r\n        if (error) {\r\n            return <div>Erreur : {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Chargement…</div>;\r\n        } else {\r\n            return (\r\n              <div>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Search onChange={this.search}></Search>\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <GenreFilter type={type} onChange={this.genre} value={this.state.genre}></GenreFilter>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <LanguageFilter onChange={this.language}></LanguageFilter>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <OrderFilter type={type} onChange={this.order} order={this.state.order}></OrderFilter>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md={12}>\r\n                        <YearFilter onChange={this.years} years={this.state.years}></YearFilter>\r\n                      </Col>\r\n                    </Row>\r\n                    <br></br>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {data}\r\n                </Row>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <nav className =\"text-xs-center\">\r\n                      <ul id=\"page-numbers\" className=\"pagination\">\r\n                        {renderPageNumbers}\r\n                      </ul>\r\n                    </nav>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass MediaCard extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          items: [],\r\n          imagePath: null,\r\n          imdbID: null,\r\n          imdbVotes: null,\r\n          imdbRating: null,\r\n          videoLink: null,\r\n          isOpen: false,\r\n          cast: [],\r\n          directors: [],\r\n          writers: []\r\n      };\r\n      this.openModal = this.openModal.bind(this);\r\n      this.castClick = this.castClick.bind(this);\r\n      this.genreClick = this.genreClick.bind(this);\r\n      this.infoClick = this.infoClick.bind(this);\r\n  }\r\n\r\n  infoClick(type) {\r\n    this.props.infoClick(this.props.type, this.props.id);\r\n  }\r\n\r\n  castClick(id) {\r\n    this.props.castClick(id);\r\n  }\r\n\r\n  genreClick(id) {\r\n    this.props.genreClick(id);\r\n  }\r\n\r\n  openModal () {\r\n      this.setState({isOpen: true})\r\n  }\r\n\r\n  componentDidMount() {\r\n      var type = this.props.type;\r\n      if(type == \"series\")\r\n        var endpoint = \"tv\";\r\n      else\r\n        var endpoint = \"movie\";\r\n      var url = \"https://api.themoviedb.org/3/\"+endpoint+\"/\"+this.props.id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n      url += \"&append_to_response=external_ids,videos,credits\";\r\n      \r\n      var videoLink = '';\r\n      fetch(url)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n              if(typeof result.videos !== \"undefined\")\r\n              {\r\n                  for(var j = 0; j < result.videos.results.length; j++)\r\n                  {\r\n                      if(result.videos.results[j].type == 'Trailer')\r\n                      {\r\n                          videoLink = result.videos.results[j].key;\r\n                      }\r\n                  }\r\n              }\r\n              var cast = [];\r\n              if(typeof result.credits !== \"undefined\")\r\n              {\r\n                  for(var k = 0; k < 5; k++)\r\n                  {\r\n                    if(typeof result.credits.cast[k] !== \"undefined\")\r\n                      cast[k] = {'id': result.credits.cast[k].id, 'name': result.credits.cast[k].name};\r\n                  }\r\n              }\r\n              var directors = [];\r\n              if(typeof result.credits !== \"undefined\")\r\n              {\r\n                  for(var k = 0; k < result.credits.crew.length; k++)\r\n                  {\r\n                    if(result.credits.crew[k].job == \"Director\")\r\n                      directors.push({'id': result.credits.crew[k].id, 'name': result.credits.crew[k].name});\r\n                  }\r\n              }\r\n              var writers = [];\r\n              if(typeof result.credits !== \"undefined\")\r\n              {\r\n                  for(var k = 0; k < result.credits.crew.length; k++)\r\n                  {\r\n                    if(result.credits.crew[k].job == \"Screenplay\")\r\n                      writers.push({'id': result.credits.crew[k].id, 'name': result.credits.crew[k].name});\r\n                  }\r\n              }\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result,\r\n              imagePath: \"https://image.tmdb.org/t/p/w500/\" + result.poster_path,\r\n              imdbID: result.external_ids.imdb_id,\r\n              videoLink: videoLink,\r\n              cast: cast,\r\n              directors: directors,\r\n              writers: writers\r\n            });\r\n            let url = 'http://www.omdbapi.com/?apikey=faa4a160&i=' + result.external_ids.imdb_id;\r\n            fetch(url).then((res) => res.json()).then((data) => \r\n            {\r\n              var imdbVotes = data.imdbVotes;\r\n              if(imdbVotes === \"N/A\")\r\n                imdbVotes = null;\r\n              var imdbRating = data.imdbRating;\r\n              if(imdbRating === \"N/A\")\r\n                imdbRating = null;\r\n\r\n              this.setState({\r\n                imdbVotes: imdbVotes,\r\n                imdbRating: imdbRating\r\n              });\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n  render() {\r\n      const { error, isLoaded, items, imdbVotes, imdbRating, videoLink, cast, directors, writers} = this.state;\r\n      const imdbLink= \"https://www.imdb.com/title/\" + this.state.imdbID + \"/?ref_=plg_rt_1\";\r\n      const genres = items.genres !== undefined ? items.genres.map(array => {\r\n          return <MDBBadge className='genre' onClick={() => this.genreClick(array.id)} style={{cursor: 'pointer'}} >{array.name}</MDBBadge>\r\n      }) : <span></span>\r\n\r\n      const directorList = directors !== undefined ? directors.map(array => {\r\n        return <span><a href=\"javascript:console.log(clicked)\" onClick={() => this.castClick(array.id)} id={array.id}>{array.name}</a>&nbsp;</span>\r\n      }) : <span></span>\r\n\r\n      const writerList = writers !== undefined ? writers.map(array => {\r\n        return <span><a href=\"javascript:console.log(clicked)\" onClick={() => this.castClick(array.id)} id={array.id}>{array.name}</a>&nbsp;</span>\r\n      }) : <span></span>\r\n\r\n      const castList = cast !== undefined ? cast.map(array => {\r\n        return <li className=\"cast\"><a href=\"javascript:console.log(clicked)\" onClick={() => this.castClick(array.id)} id={array.id}>{array.name}</a></li>\r\n      }) : <span></span>\r\n\r\n      const video = videoLink == '' ? '' : \r\n      <div class=\"youtubeLink\">\r\n          <ModalVideo channel='youtube' isOpen={this.state.isOpen} videoId={videoLink} onClose={() => this.setState({isOpen: false})}>\r\n          </ModalVideo>\r\n          <img onClick={this.openModal} style={{width:\"60px\", height:\"50px\", cursor: 'pointer'}} src='https://www.freepnglogos.com/uploads/youtube-logo-hd-8.png' tooltip></img>\r\n      </div>;\r\n      return(\r\n          <Col sm={3} md={3} lg={3}>\r\n              <Card className=\"card\">\r\n                  <div className=\"image-container d-flex justify-content-start m-3'\">\r\n                    <Card.Img variant=\"top\" src={this.state.imagePath} className=\"cover cursorPointer\" onClick={this.infoClick}></Card.Img>\r\n                    <div className='overlay d-flex align-items-center justify-content-center'>\r\n                      Add to Favourites &nbsp;<FontAwesomeIcon icon={faHeart} style={{color: \"red\"}}></FontAwesomeIcon>\r\n                    </div>\r\n                  </div>\r\n                  <Card.Body>\r\n                      {this.props.type == \"movies\" \r\n                      ? <Card.Title>{items.title} ({(new Date(items.release_date).getFullYear())})</Card.Title>\r\n                      : <a><Card.Title \r\n                      className=\"cursorPointer\" \r\n                      onClick={this.seriesClick}>{items.name} ({(new Date(items.first_air_date).getFullYear())})\r\n                      </Card.Title></a>\r\n                      }\r\n                      {this.props.type == \"series\" ? <Card.Subtitle>Season(s): {items.number_of_seasons} <br></br>\r\n                      <span>Status: </span> <span className={(items.status == \"Canceled\" || items.status == \"Pilot\" ? 'statusRed' : 'statusGreen')}>&nbsp;{items.status}</span></Card.Subtitle>\r\n                      : <span></span>}\r\n                      {video}\r\n                      <Card.Text className=\"episodeText\">\r\n                        <Container>\r\n                          <Tabs defaultActiveKey=\"info\">\r\n                            <Tab eventKey=\"info\" title=\"Info\">\r\n                              <br></br>\r\n                              <Row>\r\n                                <div>\r\n                                  {this.state.imdbID != null\r\n                                  ? <span><span className=\"imdbRatingPlugin\" data-user=\"ur30238090\" data-title={this.state.imdbID} data-style=\"p3\"></span>\r\n                                  <a target=\"_blank\" href={imdbLink}>\r\n                                    <img title=\"Open on IMDB\" src=\"https://ia.media-imdb.com/images/G/01/imdb/plugins/rating/images/imdb_37x18.png\"/>\r\n                                  </a></span>\r\n                                  : <span></span>\r\n                                  }\r\n                                  {imdbRating != null\r\n                                  ? <span><span style={{'font-weight': 'bold'}}>&nbsp;{imdbRating}</span><span style={{'font-size': \"0.6em\"}}>/10</span><span style={{'font-size': '0.8em', 'color': 'grey'}}>&nbsp;&nbsp;{imdbVotes} votes</span></span>\r\n                                  : <span></span>\r\n                                  }\r\n                                </div>\r\n                              </Row>\r\n                              <Row className=\"rowGenre\">\r\n                                {genres}\r\n                              </Row>\r\n                              {items.overview != \"\" && items.overview != null\r\n                              ?\r\n                                <Row>\r\n                                  <Accordion defaultActiveKey=\"1\">\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                      <FontAwesomeIcon icon={faList}></FontAwesomeIcon>&nbsp;Summary\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey=\"0\">\r\n                                      <span>{items.overview}</span>\r\n                                    </Accordion.Collapse>\r\n                                  </Accordion>\r\n                                </Row>\r\n                              : <span></span>\r\n                              }\r\n                            </Tab>\r\n                            <Tab eventKey=\"cast\" title=\"Cast\">\r\n                              <br></br>\r\n                              Director(s): {directorList}\r\n                              <br></br>\r\n                              Writer(s): {writerList}\r\n                              <br></br>\r\n                              <span>Cast:</span>\r\n                              <ul>\r\n                                {castList}\r\n                              </ul>\r\n                            </Tab>\r\n                          </Tabs>\r\n                        </Container>\r\n                      </Card.Text>\r\n                  </Card.Body>\r\n              </Card>\r\n          </Col>\r\n      );\r\n  }\r\n}\r\n\r\nexport default List","import React from 'react'\r\nimport {Row,Col,Card, Breadcrumb} from 'react-bootstrap';\r\n\r\nclass SeasonList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            tv_id: this.props.tv_id\r\n        };\r\n        this.seasonClick = this.seasonClick.bind(this);\r\n    }\r\n\r\n    seasonClick(season_number) {\r\n      this.props.onClick(season_number);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.seasons,\r\n                name: result.original_name\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Erreur : {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Chargement…</div>;\r\n        } else {\r\n            return (\r\n              <div>\r\n                <Row>\r\n                {\r\n                  items.map((item, index) => (\r\n                    <Season\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    id={item.id}\r\n                    season_number={item.season_number}\r\n                    onClick = {this.seasonClick}\r\n                    tv_id={this.state.tv_id}\r\n                    >\r\n                    </Season>\r\n                  ))\r\n                }\r\n                </Row>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Season extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            imagePath: null\r\n        };\r\n        this.seasonClick = this.seasonClick.bind(this);\r\n    }\r\n\r\n    seasonClick() {\r\n        this.props.onClick(this.props.season_number);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.props.tv_id+\"/season/\"+this.props.season_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result,\r\n                imagePath: result.poster_path\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        const numberEpisodes = items.episodes == null ? 0 : items.episodes.length;\r\n        return(\r\n            <Col sm={3} md={3} lg={3}>\r\n                {numberEpisodes == 0 ? <span></span>\r\n                :\r\n                <Card className=\"card cursorPointer\" onClick={this.seasonClick}>\r\n                    {this.state.imagePath != null\r\n                    ? <Card.Img variant=\"top\" src={\"https://image.tmdb.org/t/p/w500/\" + this.state.imagePath} className=\"cover\"></Card.Img>\r\n                    : <span></span>\r\n                    }\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name} ({numberEpisodes})</Card.Title>\r\n                        <Card.Text className=\"episodeText\">{items.air_date}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                }\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeasonList","import React from 'react';\r\nimport {Row,Col, Breadcrumb, Image, Card, Table} from 'react-bootstrap';\r\nimport queryString from 'query-string';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faClock,faDollarSign} from '@fortawesome/free-solid-svg-icons'\r\nimport SeasonList from './SeasonList';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 3\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n};\r\n\r\nclass Info extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      var values = queryString.parse(this.props.history.location.search);\r\n      this.state = {\r\n        id: values.id,\r\n        type: values.type,\r\n        info: {},\r\n        cast: []\r\n      }\r\n\r\n      this.castColumns = [\r\n        {\r\n            dataField: 'profile_path',\r\n            text: '',\r\n            sort: false,\r\n            type: 'string',\r\n            formatter: this.castFormatter\r\n          },\r\n        {\r\n        dataField: 'name',\r\n        text: 'Name',\r\n        sort: true,\r\n        type: 'string'\r\n      },\r\n      ,\r\n      {\r\n        dataField: 'id',\r\n        text: 'ID',\r\n        hidden: true\r\n      }\r\n    ];\r\n\r\n      this.seasonClick = this.seasonClick.bind(this);\r\n    }\r\n\r\n    seasonClick(season_number) {\r\n        this.props.history.push({\r\n            pathname: '/episodes',\r\n            search: \"?tv_id=\"+this.state.id+\"&season=\" + season_number\r\n        });\r\n    }\r\n\r\n    castFormatter(cell, row) {\r\n        return <Card.Img style={{width: \"10%\"}} src={ \"https://image.tmdb.org/t/p/w500/\" + cell}></Card.Img>\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var type = this.state.type;\r\n        if(type == \"series\")\r\n            var endpoint = \"tv\";\r\n        else\r\n            var endpoint = \"movie\";\r\n\r\n        var url = \"https://api.themoviedb.org/3/\"+endpoint+\"/\"+this.state.id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        url += \"&append_to_response=external_ids,videos,credits\";\r\n        console.log(url);\r\n        var info = await fetch(url).then(res => res.json());\r\n\r\n        console.log(info);\r\n\r\n        this.setState({\r\n            info: info,\r\n            cast: info.credits.cast\r\n        });\r\n    }  \r\n\r\n    render() {\r\n        const { id, info, cast} = this.state;\r\n        const imageLink = info.poster_path === undefined ? \"\" : \"https://image.tmdb.org/t/p/w500/\" + info.poster_path;\r\n\r\n        const castList = cast !== undefined ? cast.map(array => {\r\n            return  <div>\r\n            <Card.Img variant=\"top\" src={\"https://image.tmdb.org/t/p/w500/\" + array.profile_path} className=\"cursorPointer\" style={{width: \"80%\"}}></Card.Img>\r\n            <Card.Title>{array.name}</Card.Title>\r\n            </div>\r\n        }) : <span></span>\r\n\r\n      return (\r\n        <div>\r\n            <Row>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href={\"#/\" + this.state.type}>Home</Breadcrumb.Item>\r\n                    {this.state.type == \"series\" \r\n                    ? \r\n                    <Breadcrumb.Item active>{info.name}</Breadcrumb.Item>\r\n                    : \r\n                    <Breadcrumb.Item active>{info.title}</Breadcrumb.Item>\r\n                    }\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Card.Img src={imageLink} thumbnail></Card.Img>\r\n                </Col>\r\n                <Col md={9}>\r\n                    {this.state.type == \"series\" \r\n                    ? <Card.Title>{info.name}</Card.Title>\r\n                    : <Card.Title>{info.title}</Card.Title>\r\n                    }\r\n                    {this.state.type == \"series\" \r\n                    ? <Card.Subtitle>{info.first_air_date} | <FontAwesomeIcon icon={faClock}></FontAwesomeIcon> {info.episode_run_time} min.</Card.Subtitle>\r\n                    : <Card.Subtitle>{info.release_date} | <FontAwesomeIcon icon={faClock}></FontAwesomeIcon> {info.runtime} min. | <FontAwesomeIcon icon={faDollarSign}></FontAwesomeIcon> {currencyFormat(info.budget)} - <FontAwesomeIcon icon={faDollarSign}></FontAwesomeIcon> {currencyFormat(info.revenue)}</Card.Subtitle>\r\n                    }\r\n\r\n                    {\r\n                        info.original_title != info.title ?\r\n                        <Card.Subtitle>{info.original_title}</Card.Subtitle>\r\n                        : <span></span>\r\n                    }\r\n                    <br></br>\r\n                    <p><b>Summary:</b> {info.overview}</p>\r\n\r\n                    <Carousel responsive={responsive}>\r\n                        {castList}\r\n                    </Carousel>\r\n                </Col>\r\n            </Row>\r\n            {this.state.type == \"series\" ?\r\n            <div>\r\n                <hr></hr>\r\n                <Card.Title>Seasons</Card.Title>\r\n                <Row>\r\n                    <SeasonList tv_id = {this.state.id}\r\n                    onClick = {this.seasonClick}>\r\n                    </SeasonList>\r\n                </Row>\r\n            </div>\r\n            : <span></span>}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nfunction currencyFormat(num) {\r\n    if(num == null)\r\n        return 0;\r\n    else\r\n        return num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n }\r\n\r\nexport default Info;","import React from 'react'\r\nimport {Row,Col,Card, Breadcrumb} from 'react-bootstrap';\r\nimport queryString from 'query-string'\r\n\r\nclass EpisodeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var values = queryString.parse(this.props.history.location.search);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            season_number: values.season,\r\n            tv_id: values.tv_id\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      var url = \"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                name: result.original_name\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"/season/\"+this.state.season_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.episodes\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n      render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Erreur : {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Chargement…</div>;\r\n        } else {\r\n            return (\r\n              <div>\r\n                <Row>\r\n                  <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"#/series\">TV</Breadcrumb.Item>\r\n                    <Breadcrumb.Item href={\"#/info?type=series&id=\" + this.state.tv_id}>{this.state.name}</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>Season {this.state.season_number}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row>\r\n                {\r\n                  items.map((item, index) => (\r\n                    <Episode\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    id={item.id}\r\n                    episode_number={item.episode_number}\r\n                    season_number={item.season_number}\r\n                    tv_id={this.state.tv_id}\r\n                    >\r\n                    </Episode>\r\n                  ))\r\n                }\r\n              </Row>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Episode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            imagePath: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.props.tv_id+\"/season/\"+this.props.season_number+\"/episode/\"+this.props.episode_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result,\r\n                imagePath: result.still_path,\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        return(\r\n            <Col sm={3} md={3} lg={3}>\r\n                <Card className=\"card\">\r\n                    {this.state.imagePath != null\r\n                    ? <Card.Img variant=\"top\" src={\"https://image.tmdb.org/t/p/w500/\" + this.state.imagePath}></Card.Img>\r\n                    : <span></span>\r\n                    }\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name}</Card.Title>\r\n                        <hr></hr>\r\n                        <Card.Text>\r\n                          <span className=\"episodeText\">{items.overview}</span>\r\n                          <br></br><br></br>\r\n                          <span className=\"episodeText\">{items.air_date}</span>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EpisodeList","import React from 'react';\r\nimport {Row,Col, Breadcrumb, Image} from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport '../node_modules/react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport queryString from 'query-string';\r\n\r\nclass Cast extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var values = queryString.parse(this.props.history.location.search);\r\n    this.state = {\r\n        id: values.cast_id,\r\n        error: null,\r\n        isLoaded: false,\r\n        info: {},\r\n        credits: []\r\n    };\r\n    this.columns = [{\r\n        dataField: 'title',\r\n        text: 'Title',\r\n        sort: true,\r\n        type: 'string',\r\n        formatter: this.titleFormatter\r\n      }, {\r\n        dataField: 'jobs',\r\n        text: 'Job / Role',\r\n        sort: true,\r\n        type: 'string'\r\n      }, {\r\n        dataField: 'release_date',\r\n        text: 'Release Date',\r\n        sort: true,\r\n        type: 'date'\r\n      }, {\r\n        dataField: 'imdbRating',\r\n        text: 'IMDB Rating',\r\n        sort: true,\r\n        type: 'number'\r\n      },\r\n      {\r\n        dataField: 'rottenRating',\r\n        text: 'Rotten Tomatoes',\r\n        sort: true,\r\n        type: 'number',\r\n        formatter: this.rottenFormatter\r\n      },\r\n      {\r\n        dataField: 'id',\r\n        text: 'ID',\r\n        hidden: true\r\n      }\r\n    ];\r\n  }\r\n\r\n  async componentDidMount() {\r\n    var component = this;\r\n    var urlInfo = \"https://api.themoviedb.org/3/person/\"+this.state.id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n    var info = await fetch(urlInfo).then(res => res.json());\r\n\r\n    var credits = [];\r\n\r\n    var url = \"https://api.themoviedb.org/3/person/\"+this.state.id+\"/combined_credits?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n    await fetch(url).then(res => res.json()).then(\r\n        async (result) => {\r\n            var crew = [];\r\n            if(typeof result.crew !== undefined){\r\n                result.crew.forEach(function(element,index) {\r\n                    var data = element;\r\n                    var id = element.id;\r\n                    var jobs = element.job;\r\n                    result.crew.splice(index,1);\r\n                    result.crew.forEach(function(element2,index2) {\r\n                        if(id === element2.id && index !== index2)\r\n                        {\r\n\r\n                            jobs += \", \" + element2.job;\r\n                            result.crew.splice(index2,1);\r\n                        }\r\n                    });\r\n                    if(typeof result.cast !== \"undefined\"){\r\n                        result.cast.forEach(function(element3,index3) {\r\n                            if(id === element3.id)\r\n                            {\r\n                                jobs += \", \" + element3.character;\r\n                                result.cast.splice(index3,1);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    data.jobs = jobs;\r\n                    crew.push(data);\r\n                });\r\n            }\r\n\r\n            var cast = [];\r\n            if(typeof result.cast !== undefined){\r\n                result.cast.forEach(function(element,index) {\r\n                    var data = element;\r\n                    var id = element.id;\r\n                    var jobs = element.character;\r\n                    result.cast.forEach(function(element2,index2) {\r\n                        if(id === element2.id && index !== index2)\r\n                        {\r\n\r\n                            jobs += \", \" + element2.character;\r\n                            result.cast.splice(index2,1);\r\n                        }\r\n                    });\r\n                    data.jobs = jobs;\r\n                    cast.push(data);\r\n                });\r\n            }\r\n\r\n            var allData = cast.concat(crew);\r\n            allData.forEach(async function(element,index) {\r\n                var array = element;\r\n                var type = element.media_type;\r\n                if(type === \"tv\"){\r\n                    array.title = element.name;\r\n                    array.release_date = element.first_air_date;\r\n                }\r\n\r\n                var url = \"https://api.themoviedb.org/3/\"+type+\"/\"+element.id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n                url += \"&append_to_response=external_ids,videos\";\r\n                await fetch(url).then((res) => res.json()).then( async(resultDetails) => \r\n                {\r\n                    /*var imdb_id = resultDetails.external_ids.imdb_id;\r\n                    let url = 'http://www.omdbapi.com/?apikey=faa4a160&i=' + imdb_id;\r\n                    await fetch(url).then((res) => res.json()).then((resultIMDB) => \r\n                    {\r\n                        var imdbVotes = resultIMDB.imdbVotes;\r\n                        if(imdbVotes === \"N/A\")\r\n                            imdbVotes = null;\r\n                        var imdbRating = resultIMDB.imdbRating;\r\n                        if(imdbRating === \"N/A\")\r\n                            imdbRating = null;\r\n\r\n                        var ratings = resultIMDB.Ratings;\r\n                        var rottenRating = \"\";\r\n                        if(typeof ratings !== \"undefined\")\r\n                        {\r\n                            ratings.forEach(function(rating,index) {\r\n                                if(rating.Source === \"Rotten Tomatoes\")\r\n                                    rottenRating = rating.Value;\r\n                            });\r\n                        }\r\n                        \r\n\r\n                        if(imdbRating === \"N/A\")\r\n                            imdbRating = null;\r\n                        array.imdbVotes = parseFloat(imdbVotes);\r\n                        array.imdbRating = parseFloat(imdbRating);\r\n                        if(rottenRating !== \"\" && rottenRating !== null)\r\n                            array.rottenRating = parseFloat(rottenRating.replace(/(\\%)/, \"\"));\r\n                    });*/\r\n                });\r\n                credits.push(array);\r\n          });\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            credits: credits,\r\n            info: info\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  titleFormatter(cell, row) {\r\n    return <b>{ cell }</b>\r\n  }\r\n\r\n  rottenFormatter(cell, row) {\r\n      if(row.rottenRating != null && row.rottenRating != \"\")\r\n          return <div><span>{ cell }%</span></div>\r\n  }\r\n  \r\n  render() {\r\n    const { id, info, credits, isLoaded} = this.state;\r\n    const imageLink = info.profile_path === undefined ? \"\" : \"https://image.tmdb.org/t/p/w500/\" + info.profile_path;\r\n\r\n    const defaultSorted  = [{\r\n        dataField: 'release_date',  // default sort column name\r\n        order: 'desc'  // default sort order\r\n    }];\r\n\r\n    if (!this.state.isLoaded) {\r\n      return <div className=\"App\">Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"#/movies\">Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>{info.name}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Image src={imageLink} thumbnail></Image>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BootstrapTable\r\n                    keyField='id' \r\n                    data={credits} \r\n                    columns={this.columns} \r\n                    defaultSorted={defaultSorted}\r\n                    striped\r\n                    noDataIndication=\"No Data\"\r\n                    ></BootstrapTable>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\nimport Home from './Home';\r\nimport List from './List';\r\nimport Info from './Info';\r\nimport SeasonList from './SeasonList';\r\nimport EpisodeList from './EpisodeList';\r\nimport Cast from './Cast';\r\nimport {Container} from 'react-bootstrap';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faTv,faFilm, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport {\r\n  Route,\r\n  HashRouter,\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/react-modal-video/scss/modal-video.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n          <HashRouter>\r\n            <div>\r\n              <nav class=\"navbar navbar-expand-sm navbar-light bg-light fixed-top\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"navbar-brand\"><NavLink to=\"/home\"><FontAwesomeIcon icon={faHome}></FontAwesomeIcon> Home</NavLink></a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"navbar-brand\"><NavLink to=\"/movies\"><FontAwesomeIcon icon={faFilm}></FontAwesomeIcon> Movies</NavLink></a>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <a class=\"navbar-brand\"><NavLink to=\"/series\"><FontAwesomeIcon icon={faTv}></FontAwesomeIcon> TV</NavLink></a>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <Route path=\"/home\"  render={({history}) => (\r\n                  <Home \r\n                  history={history}\r\n                  >\r\n                  </Home>\r\n                )}\r\n            />\r\n            <Route path=\"/series\"  render={({history}) => (\r\n                  <List \r\n                  history={history}\r\n                  >\r\n                  </List>\r\n                )}\r\n            />\r\n            <Route path=\"/movies\"  render={({history}) => (\r\n                  <List \r\n                  history={history}\r\n                  >\r\n                  </List>\r\n                )}\r\n            />\r\n            <Route path=\"/seasons\"  render={({history}) => (\r\n                  <SeasonList \r\n                  history={history}\r\n                  >\r\n                  </SeasonList>\r\n                )}\r\n            />\r\n            <Route path=\"/episodes\"  render={({history}) => (\r\n                  <EpisodeList \r\n                  history={history}\r\n                  >\r\n                  </EpisodeList>\r\n                )}\r\n            />\r\n            <Route path=\"/cast\"  render={({history}) => (\r\n                  <Cast \r\n                  history={history}\r\n                  >\r\n                  </Cast>\r\n                )}\r\n            />\r\n            <Route path=\"/info\"  render={({history}) => (\r\n                  <Info \r\n                  history={history}\r\n                  >\r\n                  </Info>\r\n                )}\r\n            />\r\n          </HashRouter>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}