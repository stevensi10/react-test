{"ast":null,"code":"import _classCallCheck from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Row,Col,Card,Breadcrumb}from'react-bootstrap';import queryString from'query-string';var EpisodeList=/*#__PURE__*/function(_React$Component){_inherits(EpisodeList,_React$Component);function EpisodeList(props){var _this;_classCallCheck(this,EpisodeList);_this=_possibleConstructorReturn(this,_getPrototypeOf(EpisodeList).call(this,props));var values=queryString.parse(_this.props.history.location.search);_this.state={error:null,isLoaded:false,items:[],season_number:values.season,tv_id:values.tv_id};return _this;}_createClass(EpisodeList,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var url=\"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";fetch(url).then(function(res){return res.json();}).then(function(result){_this2.setState({name:result.original_name});},function(error){_this2.setState({isLoaded:true,error:error});});var url=\"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"/season/\"+this.state.season_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";fetch(url).then(function(res){return res.json();}).then(function(result){_this2.setState({isLoaded:true,items:result.episodes});},function(error){_this2.setState({isLoaded:true,error:error});});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,error=_this$state.error,isLoaded=_this$state.isLoaded,items=_this$state.items;if(error){return React.createElement(\"div\",null,\"Erreur : \",error.message);}else if(!isLoaded){return React.createElement(\"div\",null,\"Chargement\\u2026\");}else{return React.createElement(\"div\",null,React.createElement(Row,null,React.createElement(Breadcrumb,null,React.createElement(Breadcrumb.Item,{href:\"#/series\"},\"TV\"),React.createElement(Breadcrumb.Item,{href:\"#/info?type=series&id=\"+this.state.tv_id},this.state.name),React.createElement(Breadcrumb.Item,{active:true},\"Season \",this.state.season_number))),React.createElement(Row,null,items.map(function(item,index){return React.createElement(Episode,{key:item.id,name:item.name,id:item.id,episode_number:item.episode_number,season_number:item.season_number,tv_id:_this3.state.tv_id});})));}}}]);return EpisodeList;}(React.Component);var Episode=/*#__PURE__*/function(_React$Component2){_inherits(Episode,_React$Component2);function Episode(props){var _this4;_classCallCheck(this,Episode);_this4=_possibleConstructorReturn(this,_getPrototypeOf(Episode).call(this,props));_this4.state={error:null,isLoaded:false,items:[],imagePath:null};return _this4;}_createClass(Episode,[{key:\"componentDidMount\",value:function componentDidMount(){var _this5=this;var url=\"https://api.themoviedb.org/3/tv/\"+this.props.tv_id+\"/season/\"+this.props.season_number+\"/episode/\"+this.props.episode_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";fetch(url).then(function(res){return res.json();}).then(function(result){_this5.setState({isLoaded:true,items:result,imagePath:result.still_path});},function(error){_this5.setState({isLoaded:true,error:error});});}},{key:\"render\",value:function render(){var _this$state2=this.state,error=_this$state2.error,isLoaded=_this$state2.isLoaded,items=_this$state2.items;return React.createElement(Col,{sm:3,md:3,lg:3},React.createElement(Card,{className:\"card\"},this.state.imagePath!=null?React.createElement(Card.Img,{variant:\"top\",src:\"https://image.tmdb.org/t/p/w500/\"+this.state.imagePath}):React.createElement(\"span\",null),React.createElement(Card.Body,null,React.createElement(Card.Title,null,this.props.name),React.createElement(\"hr\",null),React.createElement(Card.Text,null,React.createElement(\"span\",{className:\"episodeText\"},items.overview),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"span\",{className:\"episodeText\"},items.air_date)))));}}]);return Episode;}(React.Component);export default EpisodeList;","map":{"version":3,"sources":["C:/wamp64/www/react-test/src/EpisodeList.js"],"names":["React","Row","Col","Card","Breadcrumb","queryString","EpisodeList","props","values","parse","history","location","search","state","error","isLoaded","items","season_number","season","tv_id","url","fetch","then","res","json","result","setState","name","original_name","episodes","message","map","item","index","id","episode_number","Component","Episode","imagePath","still_path","overview","air_date"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row,Col,Card, Breadcrumb} from 'react-bootstrap';\r\nimport queryString from 'query-string'\r\n\r\nclass EpisodeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        var values = queryString.parse(this.props.history.location.search);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            season_number: values.season,\r\n            tv_id: values.tv_id\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      var url = \"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                name: result.original_name\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"/season/\"+this.state.season_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.episodes\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n      render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Erreur : {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Chargement…</div>;\r\n        } else {\r\n            return (\r\n              <div>\r\n                <Row>\r\n                  <Breadcrumb>\r\n                    <Breadcrumb.Item href=\"#/series\">TV</Breadcrumb.Item>\r\n                    <Breadcrumb.Item href={\"#/info?type=series&id=\" + this.state.tv_id}>{this.state.name}</Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>Season {this.state.season_number}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                </Row>\r\n                <Row>\r\n                {\r\n                  items.map((item, index) => (\r\n                    <Episode\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    id={item.id}\r\n                    episode_number={item.episode_number}\r\n                    season_number={item.season_number}\r\n                    tv_id={this.state.tv_id}\r\n                    >\r\n                    </Episode>\r\n                  ))\r\n                }\r\n              </Row>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Episode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            imagePath: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.props.tv_id+\"/season/\"+this.props.season_number+\"/episode/\"+this.props.episode_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result,\r\n                imagePath: result.still_path,\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        return(\r\n            <Col sm={3} md={3} lg={3}>\r\n                <Card className=\"card\">\r\n                    {this.state.imagePath != null\r\n                    ? <Card.Img variant=\"top\" src={\"https://image.tmdb.org/t/p/w500/\" + this.state.imagePath}></Card.Img>\r\n                    : <span></span>\r\n                    }\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name}</Card.Title>\r\n                        <hr></hr>\r\n                        <Card.Text>\r\n                          <span className=\"episodeText\">{items.overview}</span>\r\n                          <br></br><br></br>\r\n                          <span className=\"episodeText\">{items.air_date}</span>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EpisodeList"]},"metadata":{},"sourceType":"module"}