{"ast":null,"code":"import _classCallCheck from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Row,Col,Card,Breadcrumb}from'react-bootstrap';var SeasonList=/*#__PURE__*/function(_React$Component){_inherits(SeasonList,_React$Component);function SeasonList(props){var _this;_classCallCheck(this,SeasonList);_this=_possibleConstructorReturn(this,_getPrototypeOf(SeasonList).call(this,props));_this.state={error:null,isLoaded:false,items:[],tv_id:_this.props.tv_id};_this.seasonClick=_this.seasonClick.bind(_assertThisInitialized(_this));return _this;}_createClass(SeasonList,[{key:\"seasonClick\",value:function seasonClick(season_number){this.props.onClick(season_number);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var url=\"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";fetch(url).then(function(res){return res.json();}).then(function(result){_this2.setState({isLoaded:true,items:result.seasons,name:result.original_name});},function(error){_this2.setState({isLoaded:true,error:error});});}},{key:\"render\",value:function render(){var _this3=this;var _this$state=this.state,error=_this$state.error,isLoaded=_this$state.isLoaded,items=_this$state.items;if(error){return React.createElement(\"div\",null,\"Erreur : \",error.message);}else if(!isLoaded){return React.createElement(\"div\",null,\"Chargement\\u2026\");}else{return React.createElement(\"div\",null,React.createElement(Row,null,items.map(function(item,index){return React.createElement(Season,{key:item.id,name:item.name,id:item.id,season_number:item.season_number,onClick:_this3.seasonClick,tv_id:_this3.state.tv_id});})));}}}]);return SeasonList;}(React.Component);var Season=/*#__PURE__*/function(_React$Component2){_inherits(Season,_React$Component2);function Season(props){var _this4;_classCallCheck(this,Season);_this4=_possibleConstructorReturn(this,_getPrototypeOf(Season).call(this,props));_this4.state={error:null,isLoaded:false,items:[],imagePath:null};_this4.seasonClick=_this4.seasonClick.bind(_assertThisInitialized(_this4));return _this4;}_createClass(Season,[{key:\"seasonClick\",value:function seasonClick(){this.props.onClick(this.props.season_number);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this5=this;var url=\"https://api.themoviedb.org/3/tv/\"+this.props.tv_id+\"/season/\"+this.props.season_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";fetch(url).then(function(res){return res.json();}).then(function(result){_this5.setState({isLoaded:true,items:result,imagePath:result.poster_path});},function(error){_this5.setState({isLoaded:true,error:error});});}},{key:\"render\",value:function render(){var _this$state2=this.state,error=_this$state2.error,isLoaded=_this$state2.isLoaded,items=_this$state2.items;var numberEpisodes=items.episodes==null?0:items.episodes.length;return React.createElement(Col,{sm:3,md:3,lg:3},numberEpisodes==0?React.createElement(\"span\",null):React.createElement(Card,{className:\"card cursorPointer\",onClick:this.seasonClick},this.state.imagePath!=null?React.createElement(Card.Img,{variant:\"top\",src:\"https://image.tmdb.org/t/p/w500/\"+this.state.imagePath,className:\"cover\"}):React.createElement(\"span\",null),React.createElement(Card.Body,null,React.createElement(Card.Title,null,this.props.name,\" (\",numberEpisodes,\")\"),React.createElement(Card.Text,{className:\"episodeText\"},items.air_date))));}}]);return Season;}(React.Component);export default SeasonList;","map":{"version":3,"sources":["C:/wamp64/www/react-test/src/SeasonList.js"],"names":["React","Row","Col","Card","Breadcrumb","SeasonList","props","state","error","isLoaded","items","tv_id","seasonClick","bind","season_number","onClick","url","fetch","then","res","json","result","setState","seasons","name","original_name","message","map","item","index","id","Component","Season","imagePath","poster_path","numberEpisodes","episodes","length","air_date"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row,Col,Card, Breadcrumb} from 'react-bootstrap';\r\n\r\nclass SeasonList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            tv_id: this.props.tv_id\r\n        };\r\n        this.seasonClick = this.seasonClick.bind(this);\r\n    }\r\n\r\n    seasonClick(season_number) {\r\n      this.props.onClick(season_number);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.state.tv_id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.seasons,\r\n                name: result.original_name\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Erreur : {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Chargementâ€¦</div>;\r\n        } else {\r\n            return (\r\n              <div>\r\n                <Row>\r\n                {\r\n                  items.map((item, index) => (\r\n                    <Season\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    id={item.id}\r\n                    season_number={item.season_number}\r\n                    onClick = {this.seasonClick}\r\n                    tv_id={this.state.tv_id}\r\n                    >\r\n                    </Season>\r\n                  ))\r\n                }\r\n                </Row>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass Season extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            imagePath: null\r\n        };\r\n        this.seasonClick = this.seasonClick.bind(this);\r\n    }\r\n\r\n    seasonClick() {\r\n        this.props.onClick(this.props.season_number);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var url = \"https://api.themoviedb.org/3/tv/\"+this.props.tv_id+\"/season/\"+this.props.season_number+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        fetch(url)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result,\r\n                imagePath: result.poster_path\r\n              });\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        const numberEpisodes = items.episodes == null ? 0 : items.episodes.length;\r\n        return(\r\n            <Col sm={3} md={3} lg={3}>\r\n                {numberEpisodes == 0 ? <span></span>\r\n                :\r\n                <Card className=\"card cursorPointer\" onClick={this.seasonClick}>\r\n                    {this.state.imagePath != null\r\n                    ? <Card.Img variant=\"top\" src={\"https://image.tmdb.org/t/p/w500/\" + this.state.imagePath} className=\"cover\"></Card.Img>\r\n                    : <span></span>\r\n                    }\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.name} ({numberEpisodes})</Card.Title>\r\n                        <Card.Text className=\"episodeText\">{items.air_date}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                }\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SeasonList"]},"metadata":{},"sourceType":"module"}