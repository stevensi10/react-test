{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _classCallCheck from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\wamp64\\\\www\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{Row,Col,Breadcrumb,Image,Card,Table}from'react-bootstrap';import queryString from'query-string';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faClock,faDollarSign}from'@fortawesome/free-solid-svg-icons';import SeasonList from'./SeasonList';import BootstrapTable from'react-bootstrap-table-next';import Carousel from'react-multi-carousel';import'react-multi-carousel/lib/styles.css';var responsive={superLargeDesktop:{// the naming can be any, depends on you.\nbreakpoint:{max:4000,min:3000},items:5},desktop:{breakpoint:{max:3000,min:1024},items:3},tablet:{breakpoint:{max:1024,min:464},items:2},mobile:{breakpoint:{max:464,min:0},items:1}};var Info=/*#__PURE__*/function(_React$Component){_inherits(Info,_React$Component);function Info(props){var _this;_classCallCheck(this,Info);_this=_possibleConstructorReturn(this,_getPrototypeOf(Info).call(this,props));var values=queryString.parse(_this.props.history.location.search);_this.state={id:values.id,type:values.type,info:{},cast:[]};_this.castColumns=[{dataField:'profile_path',text:'',sort:false,type:'string',formatter:_this.castFormatter},{dataField:'name',text:'Name',sort:true,type:'string'},,{dataField:'id',text:'ID',hidden:true}];_this.seasonClick=_this.seasonClick.bind(_assertThisInitialized(_this));return _this;}_createClass(Info,[{key:\"seasonClick\",value:function seasonClick(season_number){this.props.history.push({pathname:'/episodes',search:\"?tv_id=\"+this.state.id+\"&season=\"+season_number});}},{key:\"castFormatter\",value:function castFormatter(cell,row){return React.createElement(Card.Img,{style:{width:\"10%\"},src:\"https://image.tmdb.org/t/p/w500/\"+cell});}},{key:\"componentDidMount\",value:function componentDidMount(){var type,endpoint,url,info;return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:type=this.state.type;if(type==\"series\")endpoint=\"tv\";else endpoint=\"movie\";url=\"https://api.themoviedb.org/3/\"+endpoint+\"/\"+this.state.id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";url+=\"&append_to_response=external_ids,videos,credits\";console.log(url);_context.next=7;return _regeneratorRuntime.awrap(fetch(url).then(function(res){return res.json();}));case 7:info=_context.sent;console.log(info);this.setState({info:info,cast:info.credits.cast});case 10:case\"end\":return _context.stop();}}},null,this);}},{key:\"render\",value:function render(){var _this$state=this.state,id=_this$state.id,info=_this$state.info,cast=_this$state.cast;var imageLink=info.poster_path===undefined?\"\":\"https://image.tmdb.org/t/p/w500/\"+info.poster_path;var castList=cast!==undefined?cast.map(function(array){return React.createElement(\"div\",null,React.createElement(Card.Img,{variant:\"top\",src:\"https://image.tmdb.org/t/p/w500/\"+array.profile_path,className:\"cursorPointer\",style:{width:\"80%\"}}),React.createElement(Card.Title,null,array.name));}):React.createElement(\"span\",null);return React.createElement(\"div\",null,React.createElement(Row,null,React.createElement(Breadcrumb,null,React.createElement(Breadcrumb.Item,{href:\"#/\"+this.state.type},\"Home\"),this.state.type==\"series\"?React.createElement(Breadcrumb.Item,{active:true},info.name):React.createElement(Breadcrumb.Item,{active:true},info.title))),React.createElement(Row,null,React.createElement(Col,{md:3},React.createElement(Card.Img,{src:imageLink,thumbnail:true})),React.createElement(Col,{md:9},this.state.type==\"series\"?React.createElement(Card.Title,null,info.name):React.createElement(Card.Title,null,info.title),this.state.type==\"series\"?React.createElement(Card.Subtitle,null,info.first_air_date,\" | \",React.createElement(FontAwesomeIcon,{icon:faClock}),\" \",info.episode_run_time,\" min.\"):React.createElement(Card.Subtitle,null,info.release_date,\" | \",React.createElement(FontAwesomeIcon,{icon:faClock}),\" \",info.runtime,\" min. | \",React.createElement(FontAwesomeIcon,{icon:faDollarSign}),\" \",currencyFormat(info.budget),\" - \",React.createElement(FontAwesomeIcon,{icon:faDollarSign}),\" \",currencyFormat(info.revenue)),info.original_title!=info.title?React.createElement(Card.Subtitle,null,info.original_title):React.createElement(\"span\",null),React.createElement(\"br\",null),React.createElement(\"p\",null,React.createElement(\"b\",null,\"Summary:\"),\" \",info.overview),React.createElement(Carousel,{responsive:responsive},castList))),this.state.type==\"series\"?React.createElement(\"div\",null,React.createElement(\"hr\",null),React.createElement(Card.Title,null,\"Seasons\"),React.createElement(Row,null,React.createElement(SeasonList,{tv_id:this.state.id,onClick:this.seasonClick}))):React.createElement(\"span\",null));}}]);return Info;}(React.Component);function currencyFormat(num){if(num==null)return 0;else return num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g,'$1,');}export default Info;","map":{"version":3,"sources":["C:/wamp64/www/react-test/src/Info.js"],"names":["React","Row","Col","Breadcrumb","Image","Card","Table","queryString","FontAwesomeIcon","faClock","faDollarSign","SeasonList","BootstrapTable","Carousel","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","Info","props","values","parse","history","location","search","state","id","type","info","cast","castColumns","dataField","text","sort","formatter","castFormatter","hidden","seasonClick","bind","season_number","push","pathname","cell","row","width","endpoint","url","console","log","fetch","then","res","json","setState","credits","imageLink","poster_path","undefined","castList","map","array","profile_path","name","title","first_air_date","episode_run_time","release_date","runtime","currencyFormat","budget","revenue","original_title","overview","Component","num","toFixed","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Row,Col, Breadcrumb, Image, Card, Table} from 'react-bootstrap';\r\nimport queryString from 'query-string';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faClock,faDollarSign} from '@fortawesome/free-solid-svg-icons'\r\nimport SeasonList from './SeasonList';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 3\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n};\r\n\r\nclass Info extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      var values = queryString.parse(this.props.history.location.search);\r\n      this.state = {\r\n        id: values.id,\r\n        type: values.type,\r\n        info: {},\r\n        cast: []\r\n      }\r\n\r\n      this.castColumns = [\r\n        {\r\n            dataField: 'profile_path',\r\n            text: '',\r\n            sort: false,\r\n            type: 'string',\r\n            formatter: this.castFormatter\r\n          },\r\n        {\r\n        dataField: 'name',\r\n        text: 'Name',\r\n        sort: true,\r\n        type: 'string'\r\n      },\r\n      ,\r\n      {\r\n        dataField: 'id',\r\n        text: 'ID',\r\n        hidden: true\r\n      }\r\n    ];\r\n\r\n      this.seasonClick = this.seasonClick.bind(this);\r\n    }\r\n\r\n    seasonClick(season_number) {\r\n        this.props.history.push({\r\n            pathname: '/episodes',\r\n            search: \"?tv_id=\"+this.state.id+\"&season=\" + season_number\r\n        });\r\n    }\r\n\r\n    castFormatter(cell, row) {\r\n        return <Card.Img style={{width: \"10%\"}} src={ \"https://image.tmdb.org/t/p/w500/\" + cell}></Card.Img>\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var type = this.state.type;\r\n        if(type == \"series\")\r\n            var endpoint = \"tv\";\r\n        else\r\n            var endpoint = \"movie\";\r\n\r\n        var url = \"https://api.themoviedb.org/3/\"+endpoint+\"/\"+this.state.id+\"?api_key=601b3e84fdc281626e092faf669205b5&language=en-US\";\r\n        url += \"&append_to_response=external_ids,videos,credits\";\r\n        console.log(url);\r\n        var info = await fetch(url).then(res => res.json());\r\n\r\n        console.log(info);\r\n\r\n        this.setState({\r\n            info: info,\r\n            cast: info.credits.cast\r\n        });\r\n    }  \r\n\r\n    render() {\r\n        const { id, info, cast} = this.state;\r\n        const imageLink = info.poster_path === undefined ? \"\" : \"https://image.tmdb.org/t/p/w500/\" + info.poster_path;\r\n\r\n        const castList = cast !== undefined ? cast.map(array => {\r\n            return  <div>\r\n            <Card.Img variant=\"top\" src={\"https://image.tmdb.org/t/p/w500/\" + array.profile_path} className=\"cursorPointer\" style={{width: \"80%\"}}></Card.Img>\r\n            <Card.Title>{array.name}</Card.Title>\r\n            </div>\r\n        }) : <span></span>\r\n\r\n      return (\r\n        <div>\r\n            <Row>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item href={\"#/\" + this.state.type}>Home</Breadcrumb.Item>\r\n                    {this.state.type == \"series\" \r\n                    ? \r\n                    <Breadcrumb.Item active>{info.name}</Breadcrumb.Item>\r\n                    : \r\n                    <Breadcrumb.Item active>{info.title}</Breadcrumb.Item>\r\n                    }\r\n                </Breadcrumb>\r\n            </Row>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Card.Img src={imageLink} thumbnail></Card.Img>\r\n                </Col>\r\n                <Col md={9}>\r\n                    {this.state.type == \"series\" \r\n                    ? <Card.Title>{info.name}</Card.Title>\r\n                    : <Card.Title>{info.title}</Card.Title>\r\n                    }\r\n                    {this.state.type == \"series\" \r\n                    ? <Card.Subtitle>{info.first_air_date} | <FontAwesomeIcon icon={faClock}></FontAwesomeIcon> {info.episode_run_time} min.</Card.Subtitle>\r\n                    : <Card.Subtitle>{info.release_date} | <FontAwesomeIcon icon={faClock}></FontAwesomeIcon> {info.runtime} min. | <FontAwesomeIcon icon={faDollarSign}></FontAwesomeIcon> {currencyFormat(info.budget)} - <FontAwesomeIcon icon={faDollarSign}></FontAwesomeIcon> {currencyFormat(info.revenue)}</Card.Subtitle>\r\n                    }\r\n\r\n                    {\r\n                        info.original_title != info.title ?\r\n                        <Card.Subtitle>{info.original_title}</Card.Subtitle>\r\n                        : <span></span>\r\n                    }\r\n                    <br></br>\r\n                    <p><b>Summary:</b> {info.overview}</p>\r\n\r\n                    <Carousel responsive={responsive}>\r\n                        {castList}\r\n                    </Carousel>\r\n                </Col>\r\n            </Row>\r\n            {this.state.type == \"series\" ?\r\n            <div>\r\n                <hr></hr>\r\n                <Card.Title>Seasons</Card.Title>\r\n                <Row>\r\n                    <SeasonList tv_id = {this.state.id}\r\n                    onClick = {this.seasonClick}>\r\n                    </SeasonList>\r\n                </Row>\r\n            </div>\r\n            : <span></span>}\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nfunction currencyFormat(num) {\r\n    if(num == null)\r\n        return 0;\r\n    else\r\n        return num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n }\r\n\r\nexport default Info;"]},"metadata":{},"sourceType":"module"}